{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isNil","value","angular","isUndefined","KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","searchDebounce","generateId","appendToBody","spinnerEnabled","spinnerClass","backspaceReset","preserveArrayReference","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","$parse","$$uisDebounce","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","parentTrackBy","trackByExp","trackBy","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","tbAttr","$element","keyGetter","getItemKey","item","locals","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","minimumInputLength","parseInt","parentSearchDebounce","sdValue","isDefined","$eval","parentVisibleLimit","vlValue","visibleLimit","isNaN","refreshItems","position","toLowerCase","onSearchChanged","newValue","search","open","multiple","activate","activeIndex","tagging","isActivated","refresh","items","debounced","$evalAsync","$watch","$observe","removeAttr","controller","$scope","$timeout","$filter","$injector","_findIndex","collection","predicate","thisArg","findIndex","list","Object","i","call","_resetSearchInput","EMPTY_SEARCH","selected","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_disabledKeySet","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","idx","idxmin","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","refreshing","focus","disabled","focusser","fct","taggingTokens","tokens","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","getPlaceholder","initSearchValue","avoidReset","$broadcast","taggingLabel","on","enabled","animateHandler","phase","off","focusSearchInput","findGroupByName","noStrict","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","data","selectedItems","filteredItems","every","selectedItem","isNumber","slice","calculateDropdownPos","$watchCollection","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","refreshPromise","then","isActive","_isItemSelected","selection","isTag","set","create","$event","type","trim","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","$on","find","generatedId","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","resetDropdown","replaceWith","baseTitle","title","focusserTitle","focusserId","onSelectCallback","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","taggingEval","autofocus","focusOn","removeEventListener","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","transcludedHeader","remove","transcludedFooter","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","calculateDropdownPosAfterAnimation","body","opacity","opened","needsCalculated","isEnabled","getElements","console","enableClick","hasClass","text","disableClick","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","index","removedChoice","$item","$model","modelMapper","_getCaretPosition","el","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","unshift","resultMultiple","reverse","$formatters","inputValue","checkFnMultiple","p","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.19.8 - 2025-09-11T14:45:44.347Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\nfunction isNil(value) {\n  return angular.isUndefined(value) || value === null;\n}\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  searchDebounce: 0,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon glyphicon-refresh ui-select-spin',\n  backspaceReset: true,\n  preserveArrayReference: false // Opt-in to preserve array reference on model updates\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window', '$parse', '$$uisDebounce',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window, $parse, $$uisDebounce) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      // If no explicit track by in repeat, allow attribute-level fallback\n      var parentTrackBy = tElement.parent().attr('track-by');\n      if (!parserResult.trackByExp && (tAttrs.trackBy || parentTrackBy)) {\n        parserResult.trackByExp = tAttrs.trackBy || parentTrackBy;\n      }\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n\n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event.\n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n\n      return function link(scope, element, attrs, $select) {\n\n\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        // Apply track-by fallback when repeat lacks it\n        if (!$select.parserResult.trackByExp) {\n          var tbAttr = attrs.trackBy || $select.$element.attr('track-by');\n          if (tbAttr) {\n            $select.parserResult.trackByExp = tbAttr;\n          }\n        }\n        // Expose a key function for downstream performance features\n        if ($select.parserResult.trackByExp) {\n          var keyGetter = $parse($select.parserResult.trackByExp);\n          $select.getItemKey = function(item) {\n            var locals = {};\n            locals[$select.parserResult.itemName] = item;\n            return keyGetter(scope, locals);\n          };\n        } else {\n          $select.getItemKey = function(item) { return item; };\n        }\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.minimumInputLength = parseInt(attrs.minimumInputLength) || 0;\n        var parentSearchDebounce = $select.$element && $select.$element.attr('search-debounce');\n        var sdValue = angular.isDefined(attrs.searchDebounce) ? attrs.searchDebounce : parentSearchDebounce;\n        $select.searchDebounce = angular.isDefined(sdValue) ? parseInt(scope.$eval(sdValue)) : uiSelectConfig.searchDebounce;\n\n        var parentVisibleLimit = $select.$element && $select.$element.attr('visible-limit');\n        var vlValue = angular.isDefined(attrs.visibleLimit) ? attrs.visibleLimit : parentVisibleLimit;\n        $select.visibleLimit = angular.isDefined(vlValue) ? parseInt(scope.$eval(vlValue)) : undefined;\n        if (!isNaN($select.visibleLimit) && $select.visibleLimit > 0) {\n          if ($select.refreshItems) { $select.refreshItems(); }\n        }\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n\n        var onSearchChanged = function() {\n          var newValue = $select.search;\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        };\n\n        if ($select.searchDebounce && $select.searchDebounce > 0) {\n          var debounced = $$uisDebounce(function() {\n            scope.$evalAsync(onSearchChanged);\n          }, $select.searchDebounce);\n          scope.$watch('$select.search', function() { debounced(); });\n        } else {\n          scope.$watch('$select.search', function() { onSearchChanged(); });\n        }\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            tElement.attr('role', 'listbox');\n            $select.refresh(attrs.refresh);\n          } else {\n            element.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.refreshing = false;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  // Internal caches for performance\n  ctrl._disabledKeySet = null; // map-like object for O(1) disabled lookups when track-by is available\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return isNil(ctrl.selected) || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  ctrl.getPlaceholder = function(){\n    if(ctrl.selected && ctrl.selected.length) return;\n    return ctrl.placeholder;\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (!ctrl.multiple) {\n        if (ctrl.selected && ctrl.items.length) {\n          ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n            return angular.equals(this, item);\n          }, ctrl.selected);\n        } else {\n          ctrl.activeIndex = 0;\n        }\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1 && ctrl.open) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name, noStrict) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      if (noStrict)\n        return group.name == name;\n      else\n        return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items || [];\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (!ctrl.isGrouped && angular.isNumber(ctrl.visibleLimit) && ctrl.visibleLimit > 0 && angular.isArray(ctrl.items)) {\n        ctrl.items = ctrl.items.slice(0, ctrl.visibleLimit);\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        if ($scope.$select.search.length >= $scope.$select.minimumInputLength) {\n          var refreshPromise = $scope.$eval(refreshAttr);\n          if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n            ctrl.refreshing = true;\n            refreshPromise.finally(function() {\n              ctrl.refreshing = false;\n            });\n          }\n        }\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    if (ctrl._disabledKeySet && ctrl.getItemKey && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n      var k = ctrl.getItemKey(item);\n      return !!ctrl._disabledKeySet[k];\n    }\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        if (ctrl._disabledKeySet && ctrl.getItemKey && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n          var key = ctrl.getItemKey(item);\n          isDisabled = !!ctrl._disabledKeySet[key];\n        } else {\n          isDisabled = _isItemSelected(item);\n        }\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n  // Rebuild disabled key cache when selection changes (only useful when track-by is available)\n  $scope.$watchCollection(function () { return ctrl.selected; }, function () {\n    if (ctrl.getItemKey && ctrl.multiple && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n      var set = Object.create(null);\n      if (angular.isArray(ctrl.selected)) {\n        for (var i = 0; i < ctrl.selected.length; i++) {\n          var k = ctrl.getItemKey(ctrl.selected[i]);\n          set[k] = true;\n        }\n      }\n      ctrl._disabledKeySet = set;\n    } else {\n      ctrl._disabledKeySet = null;\n    }\n  });\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (isNil(item) || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && ($event.type === 'click' || $event.type === 'touchend') && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(null);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n    } else {\n      ctrl.activate();\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 1);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.$element[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) {\n          var idx = ++ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idx]) && idx < ctrl.items.length) {\n            ctrl.activeIndex = ++idx;\n          }\n        }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0) {\n          var idxmin = --ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idxmin]) && idxmin > 0) {\n            ctrl.activeIndex = --idxmin;\n          }\n        }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n\n  $scope.$watch('$select.activeIndex', function(activeIndex) {\n    if (activeIndex)\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n  });\n\n  $scope.$watch('$select.open', function(open) {\n    if (!open)\n      $element.find('input').removeAttr('aria-activedescendant');\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('backspaceReset', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var backspaceReset = scope.$eval(attrs.backspaceReset);\n          $select.backspaceReset = backspaceReset !== undefined ? backspaceReset : true;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here. Similar approach to http://stackoverflow.com/questions/12931369\n        // but using the capture phase instead of bubble phase of the event propagation.\n        //\n        // Using the capture phase avoids problems that araise when event.stopPropatagion()\n        // is called before the event reaches the `document`.\n        $window.document.addEventListener('click', onDocumentClick, true);\n\n        scope.$on('$destroy', function() {\n          $window.document.removeEventListener('click', onDocumentClick, true);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeaderGroupSelectable', ['$timeout', function($timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect'],\n    scope: {\n      isEnabled: \"<?uiSelectHeaderGroupSelectable\"\n    },\n    link: function ($scope, $element, attrs, select) {\n      // TODO Why that???\n      var $select = select[0];\n      if (angular.isUndefined($scope.isEnabled)) {\n        $scope.isEnabled = true;\n      }\n\n      function isEnabled() {\n        return angular.isUndefined($scope.isEnabled) || $scope.isEnabled;\n      }\n\n      function getElements() {\n        if ($select.multiple && $select.groups) {\n          return $element.querySelectorAll('.ui-select-choices-group-label');\n        } else {\n          console.error('Use uiSelectHeaderGroupSelectable with no multiple uiSelect or without groupBy');\n          return [];\n        }\n      }\n\n      function enableClick() {\n        if (isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n\n            // Check the onClick event is not already listen\n            if (!element.hasClass('ui-select-header-group-selectable')) {\n              element.addClass('ui-select-header-group-selectable');\n\n              element.on('click', function () {\n                if (isEnabled()) {\n                  var group = $select.findGroupByName(element.text(), true);\n\n                  angular.forEach(group.items, function(item) {\n                    $timeout(function() {\n                      $select.select(item, false, ' ');\n                    });\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n\n      function disableClick() {\n        if (!isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n            element.removeClass('ui-select-header-group-selectable');\n            element.off('click');\n          });\n        }\n      }\n\n      // Watch element to trigger select event\n      $scope.$watch('isEnabled', function() {\n        if (!isEnabled()) {\n          disableClick();\n        } else {\n          enableClick();\n        }\n      });\n\n      $scope.$watch('$select.groups', enableClick);\n      $scope.$watch(function() {\n        return $select.selected && $select.selected.length ? $select.selected.length : -1;\n      }, enableClick);\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout','uiSelectConfig', function(uiSelectMinErr, $timeout, uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        \n        // Check if we should preserve the array reference\n        if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue)) {\n          resultMultiple = ngModel.$modelValue; // Reuse existing array\n          resultMultiple.length = 0; // Clear it\n        }\n        \n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          \n          if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue)) {\n            resultMultiple.push(result); // Push instead of unshift for better performance\n          } else {\n            resultMultiple.unshift(result); // Original behavior\n          }\n        }\n        \n        // Reverse if we pushed (to maintain order)\n        if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue) && $select.selected.length > 0) {\n          resultMultiple.reverse();\n        }\n        \n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if (isNil(ngModel.$viewValue)){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function(){\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n\n              } else {\n                // If nothing yet selected, select last item\n                return last;\n              }\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function() {\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: isNil(item) ? item : $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE && $select.backspaceReset !== false) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      if (element.data('disallowDrop')) {\n        return;\n      }\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"/bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content\\\"> <li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"> <div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div> <div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\" role=\\\"option\\\"> <span class=\\\"ui-select-choices-row-inner\\\"></span> </div> </li> </ul> \");\n$templateCache.put(\"/bootstrap/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"/bootstrap/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"/bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"> <span ng-repeat=\\\"$item in $select.selected track by $index\\\"> <span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"> <span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append></span> </span> </span> </span> \");\n$templateCache.put(\"/bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"> <span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"> <span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"> <i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i> </a> </span> </div> \");\n$templateCache.put(\"/bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"> <li ng-transclude> </li> </ul> \");\n$templateCache.put(\"/bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"> <div> <div class=\\\"ui-select-match\\\"></div> <span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </div> <div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"/bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"> <div class=\\\"ui-select-match\\\"></div> <span ng-show=\\\"$select.open && $select.refreshing  && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"> <div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"/select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"> <li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"> <div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div> <ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"> <li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $index === $select.activeIndex, \\'select2-disabled\\': (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\"> <div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div> </li> </ul> </li> </ul> \");\n$templateCache.put(\"/select2/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"/select2/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"/select2/match-multiple.tpl.html\",\"<!--\\n  select2-choice needs to be before ui-select-multiple\\n  otherwise CSS rules from https://github.com/fk/select2-bootstrap-css\\n  do not work: [class^=\\\"select2-choice\\\"]\\n--> <span class=\\\"ui-select-match\\\"> <li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"> <span uis-transclude-append></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a> </li> </span> \");\n$templateCache.put(\"/select2/match.tpl.html\",\"<!--\\n  select2-choice needs to be before ui-select-match\\n  otherwise CSS rules from https://github.com/fk/select2-bootstrap-css\\n  do not work: [class^=\\\"select2-choice\\\"]\\n--> <a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"> <span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span> </a> \");\n$templateCache.put(\"/select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"> <div class=\\\"dropdown-content\\\"> <div data-selectable=\\\"\\\" ng-transclude></div> </div> </div>\");\n$templateCache.put(\"/select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open,\\n                \\'select2-container-disabled\\': $select.disabled}\\\"> <ul class=\\\"select2-choices\\\"> <span class=\\\"ui-select-match\\\"></span> <li class=\\\"select2-search-field\\\"> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </li> </ul> <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> </div> \");\n$templateCache.put(\"/select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open,\\n                \\'select2-container-disabled\\': $select.disabled,\\n                \\'select2-container-active\\': $select.focus,\\n                \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"> <div class=\\\"ui-select-match\\\"></div> <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"> <div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"> </div> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-no-choice\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> </div> \");\n$templateCache.put(\"/selectize/choices.tpl.html\",\"<div class=\\\"ui-select-choices\\\"> <div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"> <div class=\\\"ui-select-choices-group optgroup\\\"> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div> <div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\"> <div class=\\\"option ui-select-choices-row-inner\\\" data-selectable></div> </div> </div> </div> </div> \");\n$templateCache.put(\"/selectize/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"/selectize/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"/selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\" ui-select-sort=\\\"$select.selected\\\"> <span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"> <span uis-transclude-append></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span> </span> </div>\");\n$templateCache.put(\"/selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"> <span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude></span> </div> \");\n$templateCache.put(\"/selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"> <div class=\\\"selectize-dropdown-content\\\"> <div data-selectable=\\\"\\\" ng-transclude></div> </div> </div> \");\n$templateCache.put(\"/selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"> <div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"> <div class=\\\"ui-select-match\\\"></div> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </div> <div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"/selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"> <div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"> <div class=\\\"ui-select-match\\\"></div> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"> </div> <div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");}]);",null,null]}