{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isNil","value","angular","isUndefined","KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","searchDebounce","generateId","appendToBody","spinnerEnabled","spinnerClass","backspaceReset","preserveArrayReference","visibleLimitWhenSearching","visibleLimitWhenSearchingStep","groupVisibleLimitWhenSearching","groupVisibleLimitWhenSearchingStep","virtualScroll","virtualScrollItemHeight","virtualScrollVisibleItems","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","$parse","$$uisDebounce","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","parentTrackBy","trackByExp","trackBy","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","tbAttr","$element","keyGetter","getItemKey","item","locals","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","minimumInputLength","parseInt","parentSearchDebounce","sdValue","isDefined","$eval","parentVisibleLimit","vlValue","visibleLimit","isNaN","refreshItems","parentVisibleLimitWhenSearching","vlwsValue","position","toLowerCase","vsEnabled","vsItemHeight","vsVisibleItems","lastSearch","onSearchChanged","newValue","search","_currentVisibleLimitWhenSearching","_groupCurrentVisibleLimit","open","multiple","activate","activeIndex","tagging","isActivated","refresh","items","debounced","$evalAsync","$watch","$observe","parentVlwsStep","vlwsStepValue","stepDefault","showMore","step","inc","isNumber","base","parentGroupVl","groupVlValue","parentGroupStep","groupStepValue","groupStepDefault","showMoreGroup","groupName","curr","removeAttr","controller","$scope","$timeout","$filter","$injector","_findIndex","collection","predicate","thisArg","findIndex","list","Object","i","call","_resetSearchInput","EMPTY_SEARCH","selected","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_disabledKeySet","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","idx","idxmin","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","refreshing","focus","disabled","focusser","fct","taggingTokens","tokens","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","getPlaceholder","initSearchValue","avoidReset","$broadcast","taggingLabel","on","enabled","animateHandler","phase","off","focusSearchInput","findGroupByName","noStrict","group","repeatAttr","updateGroups","groupFn","forEach","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","data","selectedItems","filteredItems","every","selectedItem","slice","preCapCount","pci","appliedCap","newGroups","ggi","gg","glimit","gcount","gtake","Math","max","min","gtruncated","gremaining","_truncated","_remaining","effectiveLimit","remaining","limitedGroups","gi","g","take","postCapCount","remainingCountWhenSearching","truncatedWhileSearching","_itemDisabledFlags","disableChoiceExpGetter","calculateDropdownPos","$watchCollection","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","refreshPromise","then","isActive","_isItemSelected","selection","isTag","itemKey","set","create","$event","type","trim","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","$on","find","generatedId","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","resetDropdown","replaceWith","baseTitle","title","focusserTitle","focusserId","onSelectCallback","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","taggingEval","autofocus","focusOn","removeEventListener","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","transcludedHeader","remove","transcludedFooter","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","calculateDropdownPosAfterAnimation","body","opacity","opened","needsCalculated","isEnabled","getElements","console","enableClick","hasClass","text","disableClick","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","index","removedChoice","$item","$model","modelMapper","_getCaretPosition","el","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","next","caretPosition","first","newIndex","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","unshift","resultMultiple","reverse","$formatters","inputValue","checkFnMultiple","p","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.21.0 - 2025-09-29T09:01:24.768Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\nfunction isNil(value) {\n  return angular.isUndefined(value) || value === null;\n}\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  searchDebounce: 200, // Default 200ms debounce for better performance\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon glyphicon-refresh ui-select-spin',\n  backspaceReset: true,\n  preserveArrayReference: false, // Opt-in to preserve array reference on model updates\n  // Performance: search-time caps (opt-in)\n  visibleLimitWhenSearching: undefined,\n  visibleLimitWhenSearchingStep: 100,\n  groupVisibleLimitWhenSearching: undefined,\n  groupVisibleLimitWhenSearchingStep: 50,\n  // Virtual scrolling options (opt-in)\n  virtualScroll: false, // Enable virtual scrolling for large lists\n  virtualScrollItemHeight: 25, // Estimated height of each item in pixels\n  virtualScrollVisibleItems: 20 // Number of items to render in viewport\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window', '$parse', '$$uisDebounce',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window, $parse, $$uisDebounce) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n\n      // For now, always use the standard template. Virtual scrolling will be\n      // applied dynamically based on attributes\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n      var isVirtualScroll = tAttrs.virtualScroll && tAttrs.virtualScroll !== 'false';\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      // If no explicit track by in repeat, allow attribute-level fallback\n      var parentTrackBy = tElement.parent().attr('track-by');\n      if (!parserResult.trackByExp && (tAttrs.trackBy || parentTrackBy)) {\n        parserResult.trackByExp = tAttrs.trackBy || parentTrackBy;\n      }\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      // Apply ng-repeat - virtual scroll will be handled at runtime if needed\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n\n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event.\n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n\n      return function link(scope, element, attrs, $select) {\n\n\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        // Apply track-by fallback when repeat lacks it\n        if (!$select.parserResult.trackByExp) {\n          var tbAttr = attrs.trackBy || $select.$element.attr('track-by');\n          if (tbAttr) {\n            $select.parserResult.trackByExp = tbAttr;\n          }\n        }\n        // Expose a key function for downstream performance features\n        if ($select.parserResult.trackByExp) {\n          var keyGetter = $parse($select.parserResult.trackByExp);\n          $select.getItemKey = function(item) {\n            var locals = {};\n            locals[$select.parserResult.itemName] = item;\n            return keyGetter(scope, locals);\n          };\n        } else {\n          $select.getItemKey = function(item) { return item; };\n        }\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.minimumInputLength = parseInt(attrs.minimumInputLength) || 0;\n        var parentSearchDebounce = $select.$element && $select.$element.attr('search-debounce');\n        var sdValue = angular.isDefined(attrs.searchDebounce) ? attrs.searchDebounce : parentSearchDebounce;\n        $select.searchDebounce = angular.isDefined(sdValue) ? parseInt(scope.$eval(sdValue)) : uiSelectConfig.searchDebounce;\n\n        var parentVisibleLimit = $select.$element && $select.$element.attr('visible-limit');\n        var vlValue = angular.isDefined(attrs.visibleLimit) ? attrs.visibleLimit : parentVisibleLimit;\n        $select.visibleLimit = angular.isDefined(vlValue) ? parseInt(scope.$eval(vlValue)) : undefined;\n        if (!isNaN($select.visibleLimit) && $select.visibleLimit > 0) {\n          if ($select.refreshItems) { $select.refreshItems(); }\n        }\n\n        // New: limit total visible items while searching (works for grouped and ungrouped)\n        var parentVisibleLimitWhenSearching = $select.$element && $select.$element.attr('visible-limit-when-searching');\n        var vlwsValue = angular.isDefined(attrs.visibleLimitWhenSearching) ? attrs.visibleLimitWhenSearching : parentVisibleLimitWhenSearching;\n        $select.visibleLimitWhenSearching = angular.isDefined(vlwsValue) ? parseInt(scope.$eval(vlwsValue)) : uiSelectConfig.visibleLimitWhenSearching;\n        if (!isNaN($select.visibleLimitWhenSearching) && $select.visibleLimitWhenSearching > 0) {\n          if ($select.refreshItems) { $select.refreshItems(); }\n        }\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n\n        // Virtual scrolling configuration - can be overridden at directive level\n        var vsEnabled = angular.isDefined(attrs.virtualScroll) ?\n          scope.$eval(attrs.virtualScroll) : uiSelectConfig.virtualScroll;\n        $select.virtualScroll = vsEnabled;\n\n        if (vsEnabled) {\n          // Set virtual scroll parameters\n          var vsItemHeight = angular.isDefined(attrs.virtualScrollItemHeight) ?\n            parseInt(attrs.virtualScrollItemHeight) : uiSelectConfig.virtualScrollItemHeight;\n          $select.virtualScrollItemHeight = vsItemHeight;\n\n          var vsVisibleItems = angular.isDefined(attrs.virtualScrollVisibleItems) ?\n            parseInt(attrs.virtualScrollVisibleItems) : uiSelectConfig.virtualScrollVisibleItems;\n          $select.virtualScrollVisibleItems = vsVisibleItems;\n        }\n\n        var lastSearch;\n        var onSearchChanged = function() {\n          var newValue = $select.search;\n          // Reset current caps when search text changes\n          if (newValue !== lastSearch) {\n            $select._currentVisibleLimitWhenSearching = $select.visibleLimitWhenSearching;\n            $select._groupCurrentVisibleLimit = {};\n            lastSearch = newValue;\n          }\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        };\n\n        if ($select.searchDebounce && $select.searchDebounce > 0) {\n          var debounced = $$uisDebounce(function() {\n            scope.$evalAsync(onSearchChanged);\n          }, $select.searchDebounce);\n          scope.$watch('$select.search', function() { debounced(); });\n        } else {\n          scope.$watch('$select.search', function() { onSearchChanged(); });\n        }\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        // Optional: step for show-more while searching (global)\n        var parentVlwsStep = $select.$element && $select.$element.attr('visible-limit-when-searching-step');\n        var vlwsStepValue = angular.isDefined(attrs.visibleLimitWhenSearchingStep) ? attrs.visibleLimitWhenSearchingStep : parentVlwsStep;\n        var stepDefault = uiSelectConfig.visibleLimitWhenSearchingStep;\n        $select.visibleLimitWhenSearchingStep = angular.isDefined(vlwsStepValue) ? parseInt(scope.$eval(vlwsStepValue)) : stepDefault;\n\n        // Expose a helper to increase current global cap when searching\n        $select.showMore = function(step) {\n          var inc = angular.isNumber(step) ? step : $select.visibleLimitWhenSearchingStep;\n          var base = angular.isNumber($select._currentVisibleLimitWhenSearching) ? $select._currentVisibleLimitWhenSearching : ($select.visibleLimitWhenSearching || 0);\n          $select._currentVisibleLimitWhenSearching = base + inc;\n          if ($select.refreshItems) { $select.refreshItems(); }\n        };\n\n        // Per-group variant: parse limits and step\n        var parentGroupVl = $select.$element && $select.$element.attr('group-visible-limit-when-searching');\n        var groupVlValue = angular.isDefined(attrs.groupVisibleLimitWhenSearching) ? attrs.groupVisibleLimitWhenSearching : parentGroupVl;\n        $select.groupVisibleLimitWhenSearching = angular.isDefined(groupVlValue) ? parseInt(scope.$eval(groupVlValue)) : uiSelectConfig.groupVisibleLimitWhenSearching;\n\n        var parentGroupStep = $select.$element && $select.$element.attr('group-visible-limit-when-searching-step');\n        var groupStepValue = angular.isDefined(attrs.groupVisibleLimitWhenSearchingStep) ? attrs.groupVisibleLimitWhenSearchingStep : parentGroupStep;\n        var groupStepDefault = uiSelectConfig.groupVisibleLimitWhenSearchingStep;\n        $select.groupVisibleLimitWhenSearchingStep = angular.isDefined(groupStepValue) ? parseInt(scope.$eval(groupStepValue)) : groupStepDefault;\n\n        // Map of per-group current limits (by group name)\n        $select._groupCurrentVisibleLimit = {};\n\n        // Expose per-group show more\n        $select.showMoreGroup = function(groupName, step) {\n          if (!groupName) return;\n          var inc = angular.isNumber(step) ? step : $select.groupVisibleLimitWhenSearchingStep;\n          var curr = $select._groupCurrentVisibleLimit[groupName];\n          if (!angular.isNumber(curr)) {\n            curr = angular.isNumber($select.groupVisibleLimitWhenSearching) ? $select.groupVisibleLimitWhenSearching : 0;\n          }\n          $select._groupCurrentVisibleLimit[groupName] = curr + inc;\n          if ($select.refreshItems) { $select.refreshItems(); }\n        };\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            tElement.attr('role', 'listbox');\n            $select.refresh(attrs.refresh);\n          } else {\n            element.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.refreshing = false;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  // Internal caches for performance\n  ctrl._disabledKeySet = null; // map-like object for O(1) disabled lookups when track-by is available\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Virtual scrolling configuration\n  ctrl.virtualScroll = uiSelectConfig.virtualScroll;\n  ctrl.virtualScrollItemHeight = uiSelectConfig.virtualScrollItemHeight;\n  ctrl.virtualScrollVisibleItems = uiSelectConfig.virtualScrollVisibleItems;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return isNil(ctrl.selected) || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  ctrl.getPlaceholder = function(){\n    if(ctrl.selected && ctrl.selected.length) return;\n    return ctrl.placeholder;\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (!ctrl.multiple) {\n        if (ctrl.selected && ctrl.items.length) {\n          ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n            return angular.equals(this, item);\n          }, ctrl.selected);\n        } else {\n          ctrl.activeIndex = 0;\n        }\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1 && ctrl.open) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name, noStrict) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      if (noStrict)\n        return group.name == name;\n      else\n        return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items || [];\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      // Legacy: cap for ungrouped lists (existing behavior)\n      if (!ctrl.isGrouped && angular.isNumber(ctrl.visibleLimit) && ctrl.visibleLimit > 0 && angular.isArray(ctrl.items)) {\n        ctrl.items = ctrl.items.slice(0, ctrl.visibleLimit);\n      }\n\n      // Capture count before applying search-time cap\n      var preCapCount = angular.isArray(ctrl.items) ? ctrl.items.length : 0;\n      if (ctrl.isGrouped && angular.isArray(ctrl.groups)) {\n        preCapCount = 0;\n        for (var pci = 0; pci < ctrl.groups.length; pci++) {\n          preCapCount += (ctrl.groups[pci].items && ctrl.groups[pci].items.length) ? ctrl.groups[pci].items.length : 0;\n        }\n      }\n\n      // New: cap visible items while searching (two modes: per-group or global)\n      if (ctrl.search && ctrl.search.length > 0) {\n        var appliedCap = false;\n        if (ctrl.isGrouped && angular.isArray(ctrl.groups) && angular.isNumber(ctrl.groupVisibleLimitWhenSearching) && ctrl.groupVisibleLimitWhenSearching > 0) {\n          // Per-group cap\n          var newGroups = [];\n          for (var ggi = 0; ggi < ctrl.groups.length; ggi++) {\n            var gg = ctrl.groups[ggi];\n            var glimit = ctrl._groupCurrentVisibleLimit && angular.isNumber(ctrl._groupCurrentVisibleLimit[gg.name]) ?\n              ctrl._groupCurrentVisibleLimit[gg.name] : ctrl.groupVisibleLimitWhenSearching;\n            var gcount = (gg.items && gg.items.length) ? gg.items.length : 0;\n            var gtake = Math.max(Math.min(glimit, gcount), 0);\n            var gtruncated = gcount > gtake;\n            var gremaining = gtruncated ? (gcount - gtake) : 0;\n            newGroups.push({ name: gg.name, items: gg.items.slice(0, gtake), _truncated: gtruncated, _remaining: gremaining });\n          }\n          ctrl.groups = newGroups;\n          // Rebuild items\n          ctrl.items = [];\n          ctrl.groups.forEach(function(group) { ctrl.items = ctrl.items.concat(group.items); });\n          appliedCap = true;\n        }\n\n        if (!appliedCap) {\n          // Global cap\n          var effectiveLimit = (angular.isNumber(ctrl._currentVisibleLimitWhenSearching) && ctrl._currentVisibleLimitWhenSearching > 0) ?\n            ctrl._currentVisibleLimitWhenSearching : ctrl.visibleLimitWhenSearching;\n          if (angular.isNumber(effectiveLimit) && effectiveLimit > 0) {\n            var remaining = effectiveLimit;\n            if (ctrl.isGrouped && angular.isArray(ctrl.groups)) {\n              var limitedGroups = [];\n              for (var gi = 0; gi < ctrl.groups.length && remaining > 0; gi++) {\n                var g = ctrl.groups[gi];\n                var take = Math.min(remaining, (g.items && g.items.length) ? g.items.length : 0);\n                if (take > 0) {\n                  limitedGroups.push({ name: g.name, items: g.items.slice(0, take) });\n                  remaining -= take;\n                }\n              }\n              ctrl.groups = limitedGroups;\n              // Rebuild items from limited groups\n              ctrl.items = [];\n              ctrl.groups.forEach(function(group) { ctrl.items = ctrl.items.concat(group.items); });\n            } else if (!ctrl.isGrouped && angular.isArray(ctrl.items)) {\n              ctrl.items = ctrl.items.slice(0, remaining);\n            }\n          }\n        }\n      }\n      // Compute remaining and whether truncated for show-more UI\n      var postCapCount = angular.isArray(ctrl.items) ? ctrl.items.length : 0;\n      ctrl.remainingCountWhenSearching = (ctrl.search && ctrl.search.length > 0) ? Math.max(preCapCount - postCapCount, 0) : 0;\n      ctrl.truncatedWhileSearching = ctrl.remainingCountWhenSearching > 0;\n\n      // Pre-compute disabled states for all items for O(1) lookup in templates\n      if (ctrl.disableChoiceExpression && ctrl.items && ctrl.items.length && ctrl.parserResult) {\n        ctrl._itemDisabledFlags = {};\n        var disableChoiceExpGetter = $parse(ctrl.disableChoiceExpression);\n        ctrl.items.forEach(function(item) {\n          var key = ctrl.getItemKey ? ctrl.getItemKey(item) : item;\n          var locals = {};\n          locals[ctrl.parserResult.itemName] = item;\n          ctrl._itemDisabledFlags[key] = disableChoiceExpGetter($scope, locals);\n        });\n      } else {\n        ctrl._itemDisabledFlags = null;\n      }\n\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n  $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        if ($scope.$select.search.length >= $scope.$select.minimumInputLength) {\n          var refreshPromise = $scope.$eval(refreshAttr);\n          if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n            ctrl.refreshing = true;\n            refreshPromise.finally(function() {\n              ctrl.refreshing = false;\n            });\n          }\n        }\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    if (ctrl._disabledKeySet && ctrl.getItemKey && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n      var k = ctrl.getItemKey(item);\n      return !!ctrl._disabledKeySet[k];\n    }\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        if (ctrl._disabledKeySet && ctrl.getItemKey && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n          var key = ctrl.getItemKey(item);\n          isDisabled = !!ctrl._disabledKeySet[key];\n        } else {\n          isDisabled = _isItemSelected(item);\n        }\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        // Use pre-computed cache if available for O(1) lookup\n        if (ctrl._itemDisabledFlags) {\n          var itemKey = ctrl.getItemKey ? ctrl.getItemKey(item) : item;\n          isDisabled = !!ctrl._itemDisabledFlags[itemKey];\n        } else {\n          // Fallback to runtime evaluation if cache not available\n          isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n        }\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n  // Rebuild disabled key cache when selection changes (only useful when track-by is available)\n  $scope.$watchCollection(function () { return ctrl.selected; }, function () {\n    if (ctrl.getItemKey && ctrl.multiple && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n      var set = Object.create(null);\n      if (angular.isArray(ctrl.selected)) {\n        for (var i = 0; i < ctrl.selected.length; i++) {\n          var k = ctrl.getItemKey(ctrl.selected[i]);\n          set[k] = true;\n        }\n      }\n      ctrl._disabledKeySet = set;\n    } else {\n      ctrl._disabledKeySet = null;\n    }\n  });\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (isNil(item) || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && ($event.type === 'click' || $event.type === 'touchend') && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(null);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n    } else {\n      ctrl.activate();\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 1);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.$element[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) {\n          var idx = ++ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idx]) && idx < ctrl.items.length) {\n            ctrl.activeIndex = ++idx;\n          }\n        }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0) {\n          var idxmin = --ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idxmin]) && idxmin > 0) {\n            ctrl.activeIndex = --idxmin;\n          }\n        }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n\n  $scope.$watch('$select.activeIndex', function(activeIndex) {\n    if (activeIndex)\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n  });\n\n  $scope.$watch('$select.open', function(open) {\n    if (!open)\n      $element.find('input').removeAttr('aria-activedescendant');\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('backspaceReset', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var backspaceReset = scope.$eval(attrs.backspaceReset);\n          $select.backspaceReset = backspaceReset !== undefined ? backspaceReset : true;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here. Similar approach to http://stackoverflow.com/questions/12931369\n        // but using the capture phase instead of bubble phase of the event propagation.\n        //\n        // Using the capture phase avoids problems that araise when event.stopPropatagion()\n        // is called before the event reaches the `document`.\n        $window.document.addEventListener('click', onDocumentClick, true);\n\n        scope.$on('$destroy', function() {\n          $window.document.removeEventListener('click', onDocumentClick, true);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeaderGroupSelectable', ['$timeout', function($timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect'],\n    scope: {\n      isEnabled: \"<?uiSelectHeaderGroupSelectable\"\n    },\n    link: function ($scope, $element, attrs, select) {\n      // TODO Why that???\n      var $select = select[0];\n      if (angular.isUndefined($scope.isEnabled)) {\n        $scope.isEnabled = true;\n      }\n\n      function isEnabled() {\n        return angular.isUndefined($scope.isEnabled) || $scope.isEnabled;\n      }\n\n      function getElements() {\n        if ($select.multiple && $select.groups) {\n          return $element.querySelectorAll('.ui-select-choices-group-label');\n        } else {\n          console.error('Use uiSelectHeaderGroupSelectable with no multiple uiSelect or without groupBy');\n          return [];\n        }\n      }\n\n      function enableClick() {\n        if (isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n\n            // Check the onClick event is not already listen\n            if (!element.hasClass('ui-select-header-group-selectable')) {\n              element.addClass('ui-select-header-group-selectable');\n\n              element.on('click', function () {\n                if (isEnabled()) {\n                  var group = $select.findGroupByName(element.text(), true);\n\n                  angular.forEach(group.items, function(item) {\n                    $timeout(function() {\n                      $select.select(item, false, ' ');\n                    });\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n\n      function disableClick() {\n        if (!isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n            element.removeClass('ui-select-header-group-selectable');\n            element.off('click');\n          });\n        }\n      }\n\n      // Watch element to trigger select event\n      $scope.$watch('isEnabled', function() {\n        if (!isEnabled()) {\n          disableClick();\n        } else {\n          enableClick();\n        }\n      });\n\n      $scope.$watch('$select.groups', enableClick);\n      $scope.$watch(function() {\n        return $select.selected && $select.selected.length ? $select.selected.length : -1;\n      }, enableClick);\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout','uiSelectConfig', function(uiSelectMinErr, $timeout, uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        \n        // Check if we should preserve the array reference\n        if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue)) {\n          resultMultiple = ngModel.$modelValue; // Reuse existing array\n          resultMultiple.length = 0; // Clear it\n        }\n        \n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          \n          if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue)) {\n            resultMultiple.push(result); // Push instead of unshift for better performance\n          } else {\n            resultMultiple.unshift(result); // Original behavior\n          }\n        }\n        \n        // Reverse if we pushed (to maintain order)\n        if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue) && $select.selected.length > 0) {\n          resultMultiple.reverse();\n        }\n        \n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if (isNil(ngModel.$viewValue)){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function(){\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n\n              } else {\n                // If nothing yet selected, select last item\n                return last;\n              }\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function() {\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: isNil(item) ? item : $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE && $select.backspaceReset !== false) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      if (element.data('disallowDrop')) {\n        return;\n      }\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices-virtual.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-virtual-scroll\\\" style=\\\"height: {{$select.virtualScrollVisibleItems * $select.virtualScrollItemHeight}}px; overflow-y: auto;\\\"> <li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"> <div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div> <div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" vs-repeat vs-scroll-parent=\\\".ui-select-choices-content\\\" class=\\\"ui-select-choices-row\\\" style=\\\"height: {{$select.virtualScrollItemHeight}}px;\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\" role=\\\"option\\\"> <span class=\\\"ui-select-choices-row-inner\\\"></span> </div> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <button type=\\\"button\\\" class=\\\"btn btn-link btn-xs\\\" ng-click=\\\"$select.showMoreGroup($group.name)\\\">Show more ({{$group._remaining}})</button> </div> </li> </ul>\");\n$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content\\\"> <li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"> <div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div> <div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\" role=\\\"option\\\"> <span class=\\\"ui-select-choices-row-inner\\\"></span> </div> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <button type=\\\"button\\\" class=\\\"btn btn-link btn-xs\\\" ng-click=\\\"$select.showMoreGroup($group.name)\\\">Show more ({{$group._remaining}})</button> </div> </li> </ul> \");\n$templateCache.put(\"bootstrap/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"bootstrap/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"> <span ng-repeat=\\\"$item in $select.selected track by $index\\\"> <span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"> <span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append></span> </span> </span> </span> \");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"> <span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"> <span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"> <i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i> </a> </span> </div> \");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"> <li ng-transclude> </li> </ul> \");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"> <div> <div class=\\\"ui-select-match\\\"></div> <span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </div> <div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"> <div class=\\\"ui-select-match\\\"></div> <span ng-show=\\\"$select.open && $select.refreshing  && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"> <div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"select2/choices-virtual.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content select2-results ui-select-virtual-scroll\\\" style=\\\"height: {{$select.virtualScrollVisibleItems * $select.virtualScrollItemHeight}}px; overflow-y: auto;\\\"> <li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.isGrouped}\\\"> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div> <ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.isGrouped, \\'select2-results\\': !$select.isGrouped}\\\"> <li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" vs-repeat vs-scroll-parent=\\\".ui-select-choices-content\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $index === $select.activeIndex, \\'select2-disabled\\': (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\" style=\\\"height: {{$select.virtualScrollItemHeight}}px;\\\"> <div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div> </li> </ul> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <button type=\\\"button\\\" class=\\\"btn btn-link btn-xs\\\" ng-click=\\\"$select.showMoreGroup($group.name)\\\">Show more ({{$group._remaining}})</button> </div> </li> </ul>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"> <li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"> <div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div> <ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"> <li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $index === $select.activeIndex, \\'select2-disabled\\': (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\"> <div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div> </li> <li class=\\\"ui-select-group-more select2-more-results\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <a href=\\\"\\\" ng-click=\\\"$select.showMoreGroup($group.name); $event.preventDefault();\\\">Show more ({{$group._remaining}})</a> </li> </ul> </li> </ul> \");\n$templateCache.put(\"select2/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"select2/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<!--\\n  select2-choice needs to be before ui-select-multiple\\n  otherwise CSS rules from https://github.com/fk/select2-bootstrap-css\\n  do not work: [class^=\\\"select2-choice\\\"]\\n--> <span class=\\\"ui-select-match\\\"> <li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"> <span uis-transclude-append></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a> </li> </span> \");\n$templateCache.put(\"select2/match.tpl.html\",\"<!--\\n  select2-choice needs to be before ui-select-match\\n  otherwise CSS rules from https://github.com/fk/select2-bootstrap-css\\n  do not work: [class^=\\\"select2-choice\\\"]\\n--> <a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"> <span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span> </a> \");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"> <div class=\\\"dropdown-content\\\"> <div data-selectable=\\\"\\\" ng-transclude></div> </div> </div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open,\\n                \\'select2-container-disabled\\': $select.disabled}\\\"> <ul class=\\\"select2-choices\\\"> <span class=\\\"ui-select-match\\\"></span> <li class=\\\"select2-search-field\\\"> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </li> </ul> <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> </div> \");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open,\\n                \\'select2-container-disabled\\': $select.disabled,\\n                \\'select2-container-active\\': $select.focus,\\n                \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"> <div class=\\\"ui-select-match\\\"></div> <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"> <div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"> </div> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-no-choice\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> </div> \");\n$templateCache.put(\"selectize/choices-virtual.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown ui-select-virtual-scroll\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\" style=\\\"height: {{$select.virtualScrollVisibleItems * $select.virtualScrollItemHeight}}px; overflow-y: auto;\\\"> <div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"> <div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div> <div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" vs-repeat vs-scroll-parent=\\\".ui-select-choices-content\\\" style=\\\"height: {{$select.virtualScrollItemHeight}}px;\\\"> <div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"> </div> </div> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <button type=\\\"button\\\" class=\\\"btn btn-link btn-xs\\\" ng-click=\\\"$select.showMoreGroup($group.name)\\\">Show more ({{$group._remaining}})</button> </div> </div> </div> </div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div class=\\\"ui-select-choices\\\"> <div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"> <div class=\\\"ui-select-choices-group optgroup\\\"> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div> <div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\"> <div class=\\\"option ui-select-choices-row-inner\\\" data-selectable></div> </div> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <a href=\\\"\\\" class=\\\"option\\\" ng-click=\\\"$select.showMoreGroup($group.name); $event.preventDefault();\\\">Show more ({{$group._remaining}})</a> </div> </div> </div> </div> \");\n$templateCache.put(\"selectize/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"selectize/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\" ui-select-sort=\\\"$select.selected\\\"> <span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"> <span uis-transclude-append></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span> </span> </div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"> <span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude></span> </div> \");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"> <div class=\\\"selectize-dropdown-content\\\"> <div data-selectable=\\\"\\\" ng-transclude></div> </div> </div> \");\n$templateCache.put(\"selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"> <div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"> <div class=\\\"ui-select-match\\\"></div> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </div> <div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"> <div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"> <div class=\\\"ui-select-match\\\"></div> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"> </div> <div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");}]);",null,null]}