{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isNil","value","angular","isUndefined","KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","searchDebounce","generateId","appendToBody","spinnerEnabled","spinnerClass","backspaceReset","preserveArrayReference","visibleLimitWhenSearching","visibleLimitWhenSearchingStep","groupVisibleLimitWhenSearching","groupVisibleLimitWhenSearchingStep","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","$parse","$$uisDebounce","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","parentTrackBy","trackByExp","trackBy","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","tbAttr","$element","keyGetter","getItemKey","item","locals","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","minimumInputLength","parseInt","parentSearchDebounce","sdValue","isDefined","$eval","parentVisibleLimit","vlValue","visibleLimit","isNaN","refreshItems","parentVisibleLimitWhenSearching","vlwsValue","position","toLowerCase","lastSearch","onSearchChanged","newValue","search","_currentVisibleLimitWhenSearching","_groupCurrentVisibleLimit","open","multiple","activate","activeIndex","tagging","isActivated","refresh","items","debounced","$evalAsync","$watch","$observe","parentVlwsStep","vlwsStepValue","stepDefault","showMore","step","inc","isNumber","base","parentGroupVl","groupVlValue","parentGroupStep","groupStepValue","groupStepDefault","showMoreGroup","groupName","curr","removeAttr","controller","$scope","$timeout","$filter","$injector","_findIndex","collection","predicate","thisArg","findIndex","list","Object","i","call","_resetSearchInput","EMPTY_SEARCH","selected","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_disabledKeySet","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","idx","idxmin","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","refreshing","focus","disabled","focusser","fct","taggingTokens","tokens","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","getPlaceholder","initSearchValue","avoidReset","$broadcast","taggingLabel","on","enabled","animateHandler","phase","off","focusSearchInput","findGroupByName","noStrict","group","repeatAttr","updateGroups","groupFn","forEach","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","data","selectedItems","filteredItems","every","selectedItem","slice","preCapCount","pci","appliedCap","newGroups","ggi","gg","glimit","gcount","gtake","Math","max","min","gtruncated","gremaining","_truncated","_remaining","effectiveLimit","remaining","limitedGroups","gi","g","take","postCapCount","remainingCountWhenSearching","truncatedWhileSearching","calculateDropdownPos","$watchCollection","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","refreshPromise","then","isActive","_isItemSelected","selection","isTag","set","create","$event","type","trim","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","$on","find","generatedId","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","resetDropdown","replaceWith","baseTitle","title","focusserTitle","focusserId","onSelectCallback","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","taggingEval","autofocus","focusOn","removeEventListener","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","transcludedHeader","remove","transcludedFooter","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","calculateDropdownPosAfterAnimation","body","opacity","opened","needsCalculated","isEnabled","getElements","console","enableClick","hasClass","text","disableClick","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","index","removedChoice","$item","$model","modelMapper","_getCaretPosition","el","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","next","caretPosition","first","newIndex","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","unshift","resultMultiple","reverse","$formatters","inputValue","checkFnMultiple","p","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":";;;;;;CAQC,WACD,YC+CA,SAAAA,GAAAC,GACA,MAAAC,SAAAC,YAAAF,IAAA,OAAAA,EAzDA,GAAAG,IACAC,IAAA,EACAC,MAAA,GACAC,IAAA,GACAC,MAAA,GACAC,KAAA,GACAC,GAAA,GACAC,MAAA,GACAC,KAAA,GACAC,MAAA,GACAC,KAAA,GACAC,IAAA,GACAC,QAAA,GACAC,UAAA,GACAC,KAAA,GACAC,IAAA,GACAC,UAAA,EACAC,OAAA,GACAC,QAAA,GAEAC,KAAAC,GAAA,UAAAC,EAAA,YAAAC,EAAA,MAAAC,GAAA,QAAAC,GAAA,QAAAC,GAAA,OAAAC,GAAA,MAAAC,GAAA,aAAAC,GAAA,WAAAC,GAAA,MAAAC,GAAA,QAAAC,GAAA,UAAAC,GAAA,YAAAC,GAAA,MAAAC,GAAA,OAAAC,GAAA,OAAAC,GAAA,KAAAC,GAAA,QAAAC,GAAA,OAAAC,GAAA,IAAAC,GAAA,caAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAGAC,UAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,KACA,QAAAD,GACA,IAAA3H,GAAAkB,QACA,IAAAlB,GAAAS,MACA,IAAAT,GAAAU,KACA,IAAAV,GAAAW,IACA,OAAA,EAGA,SAAA+G,EAAAG,SAAAH,EAAAI,SAAAJ,EAAAK,SAIAC,cAAA,SAAAL,GAEA,MADAA,GAAAA,EAAAC,MAAAD,EAAAC,MAAAD,EACAA,GAAA,KAAAA,GAAA,KAEAM,mBAAA,SAAAN,GACA,QAAA3H,EAAAM,GAAAN,EAAAQ,MAAA0H,QAAAP,IAEAQ,qBAAA,SAAAR,GACA,QAAA3H,EAAAK,KAAAL,EAAAO,MAAAP,EAAAgB,UAAAhB,EAAAiB,QAAAiH,QAAAP,IAEAS,YAAA,SAAAT,GACA,GAAAU,IAAAnI,MAAA,KAAAD,IAAA,KAAAG,MAAA,KAAAuH,EACA,OAAAU,GAAAA,EAGArI,EAAA2H,GAAAW,OAAAX,GAiBAW,UAAAxI,QAAAyI,QAAAC,UAAAC,mBACA3I,QAAAyI,QAAAC,UAAAC,iBAAA,SAAAC,GACA,MAAA5I,SAAAyI,QAAAI,KAAA,GAAAF,iBAAAC,MAOAJ,SAAAxI,QAAAyI,QAAAC,UAAAI,UACA9I,QAAAyI,QAAAC,UAAAI,QAAA,SAAAF,GAIA,IAHA,GAAAG,GAAAF,KAAA,GACAG,EAAAD,EAAAE,SAAAF,EAAAG,uBAAAH,EAAAI,oBAAAJ,EAAAK,kBAEAL,GAAA,CACA,GAAAC,EAAAK,KAAAN,GAAAH,GACA,MAAAG,EAEAA,GAAAA,EAAAO,cAGA,OAAA,GAIA,IAAAC,GAAA,EAEAC,EAAAxJ,QAAAyJ,OAAA,gBAEAC,SAAA,kBACAC,MAAA,YACAC,eAAA,EACAC,UAAA,EACAC,YAAA,GACAC,aAAA,IACAC,eAAA,EACAC,cAAA,EACAC,iBAAA,OACAC,gBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,WAAA,WACA,MAAAf,MAEAgB,cAAA,EACAC,gBAAA,EACAC,aAAA,6CACAC,gBAAA,EACAC,wBAAA,EAEAC,0BAAApC,OACAqC,8BAAA,IACAC,+BAAAtC,OACAuC,mCAAA,KAIAC,QAAA,iBAAA,WACA,GAAAC,GAAAjL,QAAAkL,SAAA,YACA,OAAA,YACA,GAAAC,GAAAF,EAAAG,MAAAvC,KAAAwC,WACAC,EAAAH,EAAAG,QAAAC,QAAA,GAAAC,QAAA,oCAAA,GACA,OAAA,IAAAC,OAAAH,MAKAI,UAAA,sBAAA,WACA,OACAC,KAAA,SAAAC,EAAAnD,EAAAoD,EAAAC,EAAAC,GACAA,EAAAH,EAAA,SAAAI,GACAvD,EAAAwD,OAAAD,SAYAE,OAAA,YAAA,WACA,QAAAC,GAAAC,GACA,OAAA,GAAAA,GAAAb,QAAA,yBAAA,QAGA,MAAA,UAAAc,EAAAC,GACA,MAAAA,IAAAD,GAAA,GAAAA,GAAAd,QAAA,GAAAC,QAAAW,EAAAG,GAAA,MAAA,+CAAAD,KAUAE,QAAA,aACA,YAAA,UACA,SAAAC,EAAAC,GAEA,MAAA,UAAAhE,GACA,GAAAiE,GAAAjE,EAAA,GAAAkE,uBACA,QACAC,MAAAF,EAAAE,OAAAnE,EAAAoE,KAAA,eACAC,OAAAJ,EAAAI,QAAArE,EAAAoE,KAAA,gBACAE,IAAAL,EAAAK,KAAAN,EAAAO,aAAAR,EAAA,GAAAS,gBAAAC,WACAC,KAAAT,EAAAS,MAAAV,EAAAW,aAAAZ,EAAA,GAAAS,gBAAAI,gBAKA7D,GAAAkC,UAAA,mBACA,iBAAA,kBAAA,iBAAA,WAAA,UAAA,SAAA,gBACA,SAAA4B,EAAAC,EAAAC,EAAAC,EAAAhB,EAAAiB,EAAAC,GAEA,OACAC,SAAA,KACAC,QAAA,YACAtC,SAAA,EACAQ,YAAA,EACA+B,YAAA,SAAAC,GAEAA,EAAAC,SAAA,oBAGA,IAAArE,GAAAoE,EAAAE,SAAAC,KAAA,UAAAZ,EAAA3D,KACA,OAAAA,GAAA,qBAGAwE,QAAA,SAAAJ,EAAAK,GAEA,IAAAA,EAAAC,OAAA,KAAAb,GAAA,SAAA,gCAGA,IAAAc,GAAAF,EAAAG,QACAC,EAAAJ,EAAAK,WAEA,IAAAH,EAAA,CACA,GAAAI,GAAAX,EAAApF,iBAAA,2BACA,IAAA,IAAA+F,EAAAC,OAAA,KAAAnB,GAAA,OAAA,qDAAAkB,EAAAC,OACAD,GAAAR,KAAA,YAAAX,EAAAqB,8BAGA,GAAAC,GAAAtB,EAAAuB,MAAAV,EAAAC,QAGAU,EAAAhB,EAAAE,SAAAC,KAAA,WACAW,GAAAG,aAAAZ,EAAAa,UAAAF,IACAF,EAAAG,WAAAZ,EAAAa,SAAAF,EAGA,IAAAG,GAAAnB,EAAApF,iBAAA,yBACA,IAAA,IAAAuG,EAAAP,OACA,KAAAnB,GAAA,OAAA,mDAAA0B,EAAAP,OAGAO,GAAAhB,KAAA,YAAAW,EAAAM,iBAAAb,IACAJ,KAAA,QAAA,eAGA,IAAAkB,GAAArB,EAAApF,iBAAA,+BACA,IAAA,IAAAyG,EAAAT,OACA,KAAAnB,GAAA,OAAA,yDAAA4B,EAAAT,OAEAS,GAAAlB,KAAA,wBAAA,GAGA,IAAAmB,GAAA5C,EAAA6C,SAAAC,iBAAAL,EAAAE,CAGA,OAFAC,GAAAnB,KAAA,WAAA,kBAAAW,EAAAW,SAAA,iCAEA,SAAA5D,EAAAnD,EAAAoD,EAAA4D,GAKA,GAFAA,EAAAC,gBAAA7D,EAAAwC,OAAAC,EAAAE,IAEAiB,EAAAZ,aAAAG,WAAA,CACA,GAAAW,GAAA9D,EAAAoD,SAAAQ,EAAAG,SAAA1B,KAAA,WACAyB,KACAF,EAAAZ,aAAAG,WAAAW,GAIA,GAAAF,EAAAZ,aAAAG,WAAA,CACA,GAAAa,GAAAnC,EAAA+B,EAAAZ,aAAAG,WACAS,GAAAK,WAAA,SAAAC,GACA,GAAAC,KAEA,OADAA,GAAAP,EAAAZ,aAAAW,UAAAO,EACAF,EAAAjE,EAAAoE,QAGAP,GAAAK,WAAA,SAAAC,GAAA,MAAAA,GAEAN,GAAAQ,wBAAApE,EAAAqE,gBACAT,EAAAU,oBAAAtE,EAAAuE,YACAX,EAAAY,mBAAAC,SAAAzE,EAAAwE,qBAAA,CACA,IAAAE,GAAAd,EAAAG,UAAAH,EAAAG,SAAA1B,KAAA,mBACAsC,EAAAxQ,QAAAyQ,UAAA5E,EAAAxB,gBAAAwB,EAAAxB,eAAAkG,CACAd,GAAApF,eAAArK,QAAAyQ,UAAAD,GAAAF,SAAA1E,EAAA8E,MAAAF,IAAAlD,EAAAjD,cAEA,IAAAsG,GAAAlB,EAAAG,UAAAH,EAAAG,SAAA1B,KAAA,iBACA0C,EAAA5Q,QAAAyQ,UAAA5E,EAAAgF,cAAAhF,EAAAgF,aAAAF,CACAlB,GAAAoB,aAAA7Q,QAAAyQ,UAAAG,GAAAN,SAAA1E,EAAA8E,MAAAE,IAAApI,QACAsI,MAAArB,EAAAoB,eAAApB,EAAAoB,aAAA,GACApB,EAAAsB,cAAAtB,EAAAsB,cAIA,IAAAC,GAAAvB,EAAAG,UAAAH,EAAAG,SAAA1B,KAAA,gCACA+C,EAAAjR,QAAAyQ,UAAA5E,EAAAjB,2BAAAiB,EAAAjB,0BAAAoG,CACAvB,GAAA7E,0BAAA5K,QAAAyQ,UAAAQ,GAAAX,SAAA1E,EAAA8E,MAAAO,IAAA3D,EAAA1C,2BACAkG,MAAArB,EAAA7E,4BAAA6E,EAAA7E,0BAAA,GACA6E,EAAAsB,cAAAtB,EAAAsB,eAEAtB,EAAAvF,iBAAA2B,EAAAqF,SAAArF,EAAAqF,SAAAC,cAAA7D,EAAApD,gBAEA,IAAAkH,GACAC,EAAA,WACA,GAAAC,GAAA7B,EAAA8B,MAEAD,KAAAF,IACA3B,EAAA+B,kCAAA/B,EAAA7E,0BACA6E,EAAAgC,6BACAL,EAAAE,GAEAA,IAAA7B,EAAAiC,MAAAjC,EAAAkC,UAAAlC,EAAAmC,UAAA,GAAA,GACAnC,EAAAoC,YAAApC,EAAAqC,QAAAC,eAAA,GACAlG,EAAAwE,oBAAAZ,EAAA8B,OAAA5C,QAAA9C,EAAAwE,mBACAZ,EAAAuC,QAAAnG,EAAAmG,SAEAvC,EAAAwC,SAIA,IAAAxC,EAAApF,gBAAAoF,EAAApF,eAAA,EAAA,CACA,GAAA6H,GAAAvE,EAAA,WACA/B,EAAAuG,WAAAd,IACA5B,EAAApF,eACAuB,GAAAwG,OAAA,iBAAA,WAAAF,UAEAtG,GAAAwG,OAAA,iBAAA,WAAAf,KAGAxF,GAAAwG,SAAA,eAAA,WAEA,GAAAtI,GAAA6B,EAAA8E,MAAA7E,EAAA9B,aACA0F,GAAA1F,aAAAvB,SAAAuB,EAAAA,EAAAuD,EAAAvD,cAIA,IAAAuI,GAAA7C,EAAAG,UAAAH,EAAAG,SAAA1B,KAAA,qCACAqE,EAAAvS,QAAAyQ,UAAA5E,EAAAhB,+BAAAgB,EAAAhB,8BAAAyH,EACAE,EAAAlF,EAAAzC,6BACA4E,GAAA5E,8BAAA7K,QAAAyQ,UAAA8B,GAAAjC,SAAA1E,EAAA8E,MAAA6B,IAAAC,EAGA/C,EAAAgD,SAAA,SAAAC,GACA,GAAAC,GAAA3S,QAAA4S,SAAAF,GAAAA,EAAAjD,EAAA5E,8BACAgI,EAAA7S,QAAA4S,SAAAnD,EAAA+B,mCAAA/B,EAAA+B,kCAAA/B,EAAA7E,2BAAA,CACA6E,GAAA+B,kCAAAqB,EAAAF,EACAlD,EAAAsB,cAAAtB,EAAAsB,eAIA,IAAA+B,GAAArD,EAAAG,UAAAH,EAAAG,SAAA1B,KAAA,sCACA6E,EAAA/S,QAAAyQ,UAAA5E,EAAAf,gCAAAe,EAAAf,+BAAAgI,CACArD,GAAA3E,+BAAA9K,QAAAyQ,UAAAsC,GAAAzC,SAAA1E,EAAA8E,MAAAqC,IAAAzF,EAAAxC,8BAEA,IAAAkI,GAAAvD,EAAAG,UAAAH,EAAAG,SAAA1B,KAAA,2CACA+E,EAAAjT,QAAAyQ,UAAA5E,EAAAd,oCAAAc,EAAAd,mCAAAiI,EACAE,EAAA5F,EAAAvC,kCACA0E,GAAA1E,mCAAA/K,QAAAyQ,UAAAwC,GAAA3C,SAAA1E,EAAA8E,MAAAuC,IAAAC,EAGAzD,EAAAgC,6BAGAhC,EAAA0D,cAAA,SAAAC,EAAAV,GACA,GAAAU,EAAA,CACA,GAAAT,GAAA3S,QAAA4S,SAAAF,GAAAA,EAAAjD,EAAA1E,mCACAsI,EAAA5D,EAAAgC,0BAAA2B,EACApT,SAAA4S,SAAAS,KACAA,EAAArT,QAAA4S,SAAAnD,EAAA3E,gCAAA2E,EAAA3E,+BAAA,GAEA2E,EAAAgC,0BAAA2B,GAAAC,EAAAV,EACAlD,EAAAsB,cAAAtB,EAAAsB,iBAGAnF,EAAAwG,OAAA,eAAA,SAAAV,GACAA,GACA3D,EAAAG,KAAA,OAAA,WACAuB,EAAAuC,QAAAnG,EAAAmG,UAEAvJ,EAAA6K,WAAA,gBAcA9J,EAAA+J,WAAA,gBACA,SAAA,WAAA,WAAA,UAAA,gBAAA,kBAAA,iBAAA,iBAAA,SAAA,YAAA,UACA,SAAAC,EAAA5D,EAAA6D,EAAAC,EAAA/F,EAAAJ,EAAAC,EAAAF,EAAAI,EAAAiG,EAAAlH,GAmEA,QAAAmH,GAAAC,EAAAC,EAAAC,GACA,GAAAF,EAAAG,UACA,MAAAH,GAAAG,UAAAF,EAAAC,EAMA,KAAA,GAFAhU,GAFAkU,EAAAC,OAAAL,GACAlF,EAAAsF,EAAAtF,SAAA,EAGAwF,EAAA,EAAAA,EAAAxF,EAAAwF,IAEA,GADApU,EAAAkU,EAAAE,GACAL,EAAAM,KAAAL,EAAAhU,EAAAoU,EAAAF,GACA,MAAAE,EAGA,UAKA,QAAAE,KACAvI,EAAA1B,mBACA0B,EAAAyF,OAAA+C,EAEAxI,EAAA6F,WACA7F,EAAAyI,UAAAzI,EAAAmG,MAAAtD,OACA7C,EAAA+F,YAAA+B,EAAA9H,EAAAmG,MAAA,SAAAlC,GACA,MAAA/P,SAAAwU,OAAA3L,KAAAkH,IACAjE,EAAAyI,UAEAzI,EAAA+F,YAAA,IAMA,QAAA4C,GAAA/F,EAAAgG,GACA,GAAAP,GAAAQ,EAAAC,IACA,KAAAT,EAAA,EAAAA,EAAAO,EAAA/F,OAAAwF,IACA,IAAAQ,EAAA,EAAAA,EAAAjG,EAAAC,OAAAgG,IACAjG,EAAAiG,GAAAE,OAAAH,EAAAP,KACAS,EAAAE,KAAApG,EAAAiG,GAIA,OAAAC,GA4SA,QAAAG,GAAAhF,EAAAiF,GACA,GAAAC,GAAAC,EAAA9M,QAAA2H,EACAiF,IAAAC,QACAC,EAAAJ,KAAA/E,IAGAiF,GAAAC,MACAC,EAAAC,OAAAF,EAAA,GAIA,QAAAG,GAAArF,GACA,GAAAjE,EAAAuJ,iBAAAvJ,EAAAgE,YAAAhE,EAAA+C,cAAA/C,EAAA+C,aAAAG,WAAA,CACA,GAAAnH,GAAAiE,EAAAgE,WAAAC,EACA,SAAAjE,EAAAuJ,gBAAAxN,GAEA,MAAAqN,GAAA9M,QAAA2H,MA4JA,QAAAuF,GAAAC,GAKA,QAAAC,GAAAzF,EAAA0F,GACA,GAAAC,GAAAC,EAAAvN,QAAA2H,EACA0F,IAAAC,QACAC,EAAAb,KAAA/E,IAGA0F,GAAAC,MACAC,EAAAR,OAAAO,EAAA,GAIA,QAAAE,GAAA7F,GACA,MAAA4F,GAAAvN,QAAA2H,MAhBA,GAAAwF,EAAA,CAEA,GAAAI,KAiBA7J,GAAA2J,SAAA,SAAAI,EAAAC,GACA,GAAAL,IAAA,EACA1F,EAAAjE,EAAAyI,SAAAuB,EAWA,OATA/F,KACA8F,GACAJ,IAAAI,EAAAnF,MAAA5E,EAAAiK,sBACAP,EAAAzF,EAAA0F,IAEAA,EAAAG,EAAA7F,IAIA0F,IA4CA,QAAAO,GAAAC,GACA,GAAAC,IAAA,CACA,QAAAD,GACA,IAAA/V,GAAAQ,KACA,IAAAoL,EAAA4F,MAAA5F,EAAA6F,SAAA7F,EAAA8F,UAAA,GAAA,OACA,IAAA9F,EAAA+F,YAAA/F,EAAAmG,MAAAtD,OAAA,EAEA,IADA,GAAAwH,KAAArK,EAAA+F,YACAuD,EAAAtJ,EAAAmG,MAAAkE,KAAAA,EAAArK,EAAAmG,MAAAtD,QACA7C,EAAA+F,cAAAsE,CAGA,MACA,KAAAjW,GAAAM,GACA,IAAAsL,EAAA4F,MAAA5F,EAAA6F,SAAA7F,EAAA8F,UAAA,GAAA,OACA,IAAA9F,EAAA+F,YAAA,EAEA,IADA,GAAAuE,KAAAtK,EAAA+F,YACAuD,EAAAtJ,EAAAmG,MAAAmE,KAAAA,EAAA,GACAtK,EAAA+F,cAAAuE,CAGA,MACA,KAAAlW,GAAAC,IACA2L,EAAA6F,WAAA7F,EAAA4F,MAAA5F,EAAAuK,OAAAvK,EAAAmG,MAAAnG,EAAA+F,cAAA,EACA,MACA,KAAA3R,GAAAE,MACA0L,EAAA4F,OAAA5F,EAAAgG,QAAAC,aAAAjG,EAAA+F,aAAA,GACA/F,EAAAuK,OAAAvK,EAAAmG,MAAAnG,EAAA+F,aAAA/F,EAAA7B,cAEA6B,EAAA8F,UAAA,GAAA,EAEA,MACA,KAAA1R,GAAAG,IACAyL,EAAAwK,OACA,MACA,SACAJ,GAAA,EAEA,MAAAA,GA6GA,QAAAK,KACA,GAAAC,GAAA5G,EAAAjH,iBAAA,8BACAuG,EAAAsH,EAAA7N,iBAAA,yBACA,IAAAuG,EAAAP,OAAA,EACA,KAAAnB,GAAA,UAAA,0DAAA0B,EAAAP,OAGA,MAAA7C,EAAA+F,YAAA,GAAA,CAIA,GAAA4E,GAAAvH,EAAApD,EAAA+F,aACA6E,EAAAD,EAAAE,UAAAF,EAAAG,aAAAJ,EAAA,GAAAtJ,UACAJ,EAAA0J,EAAA,GAAAK,YAEAH,GAAA5J,EACA0J,EAAA,GAAAtJ,WAAAwJ,EAAA5J,EACA4J,EAAAD,EAAAG,eACA9K,EAAAgL,WAAA,IAAAhL,EAAA+F,YACA2E,EAAA,GAAAtJ,UAAA,EAEAsJ,EAAA,GAAAtJ,WAAAuJ,EAAAG,aAAAF,IAzzBA,GAAA5K,GAAAjD,KAEAyL,EAAA,EAkDA,IAhDAxI,EAAAhC,YAAAwD,EAAAxD,YACAgC,EAAAlC,cAAA0D,EAAA1D,cACAkC,EAAAjC,SAAAyD,EAAAzD,SACAiC,EAAA/B,aAAAuD,EAAAvD,aACA+B,EAAAiL,MAAAzJ,EAAAyJ,MACAjL,EAAA1B,iBAAAkD,EAAAlD,iBACA0B,EAAAkL,YAAA,EACAlL,EAAAtB,eAAA8C,EAAA9C,eACAsB,EAAArB,aAAA6C,EAAA7C,aACAqB,EAAA3B,eAAAmD,EAAAnD,eACA2B,EAAA9B,eAAA,EACA8B,EAAA7B,cAAA,EACA6B,EAAAyF,OAAA+C,EAEAxI,EAAA+F,YAAA,EACA/F,EAAAmG,SAEAnG,EAAA4F,MAAA,EACA5F,EAAAmL,OAAA,EACAnL,EAAAoL,UAAA,EACApL,EAAAyI,SAAA/L,OAGAsD,EAAAuJ,gBAAA,KAEAvJ,EAAA5B,iBAAA,OAEA4B,EAAAqL,SAAA3O,OACAsD,EAAA6F,SAAAnJ,OACAsD,EAAAmE,wBAAAzH,OACAsD,EAAAgG,SAAAC,aAAA,EAAAqF,IAAA5O,QACAsD,EAAAuL,eAAAtF,aAAA,EAAAuF,OAAA9O,QACAsD,EAAAiK,qBAAAvN,OACAsD,EAAAyL,sBAAA,EACAzL,EAAA4H,QAAAA,EACA5H,EAAA8D,SAAAA,EAGA9D,EAAA0L,SAAA,WACA,IACA,MAAA7D,GAAA8D,IAAA,YACA,MAAAC,GAEA,MAAA,UAIA5L,EAAA6L,YAAA/H,EAAAjH,iBAAA,0BACA,IAAAmD,EAAA6L,YAAAhJ,OACA,KAAAnB,GAAA,cAAA,mDAAA1B,EAAA6L,YAAAhJ,OAGA7C,GAAA8L,QAAA,WACA,MAAA9X,GAAAgM,EAAAyI,WAAA,KAAAzI,EAAAyI,UAAAzI,EAAA6F,UAAA,IAAA7F,EAAAyI,SAAA5F,QAGA7C,EAAA+L,eAAA,WACA,IAAA/L,EAAAyI,WAAAzI,EAAAyI,SAAA5F,OACA,MAAA7C,GAAAhC,aAmDAgC,EAAA8F,SAAA,SAAAkG,EAAAC,GACA,GAAAjM,EAAAoL,UAAApL,EAAA4F,KA6CA5F,EAAA4F,OAAA5F,EAAAlC,eAEAkC,EAAAwK,YA/CA,CACAyB,GAAA1D,IAEAb,EAAAwE,WAAA,gBACAlM,EAAA4F,MAAA,EACA5F,EAAA+F,YAAA/F,EAAA+F,aAAA/F,EAAAmG,MAAAtD,OAAA,EAAA7C,EAAA+F,YAGA/F,EAAA+F,kBAAA/F,EAAAmM,gBAAA,IACAnM,EAAA+F,YAAA,EAGA,IAAA2E,GAAA5G,EAAAjH,iBAAA,8BACAgP,EAAA/H,EAAAjH,iBAAA,oBACA,IAAAmD,EAAA0L,UAAA1L,EAAA0L,SAAAU,IAAApM,EAAA0L,SAAAW,QAAA3B,EAAA,IAAA,CACA,GAAA4B,GAAA,SAAArP,EAAAsP,GACA,UAAAA,GAAA,IAAAvM,EAAAmG,MAAAtD,QAEA7C,EAAA0L,SAAAc,IAAA,cAAAX,EAAA,GAAAS,GACA3E,EAAA,WACA3H,EAAAyM,iBAAAT,MAEA,UAAAO,IAEAvM,EAAA0L,SAAAc,IAAA,QAAA9B,EAAA,GAAA4B,GACA3E,EAAA,WACA3H,EAAAyM,iBAAAT,MAKAhM,GAAAmG,MAAAtD,OAAA,EACA7C,EAAA0L,SAAAU,GAAA,QAAA1B,EAAA,GAAA4B,GAEAtM,EAAA0L,SAAAU,GAAA,cAAAP,EAAA,GAAAS,OAGA3E,GAAA,WACA3H,EAAAyM,iBAAAT,IACAhM,EAAAgG,QAAAC,aAAAjG,EAAAmG,MAAAtD,OAAA,GAAA7C,EAAA4F,MACA6E,QAWAzK,EAAAyM,iBAAA,SAAAT,GACAhM,EAAAyF,OAAAuG,GAAAhM,EAAAyF,OACAzF,EAAA6L,YAAA,GAAAV,SAGAnL,EAAA0M,gBAAA,SAAA3D,EAAA4D,GACA,MAAA3M,GAAA4C,QAAA5C,EAAA4C,OAAAxC,OAAA,SAAAwM,GACA,MAAAD,GACAC,EAAA7D,MAAAA,EAEA6D,EAAA7D,OAAAA,IACA,IAGA/I,EAAA4D,gBAAA,SAAAiJ,EAAArK,EAAAE,GACA,QAAAoK,GAAA3G,GACA,GAAA4G,GAAArF,EAAA9C,MAAApC,EAYA,IAXAxC,EAAA4C,UACA1O,QAAA8Y,QAAA7G,EAAA,SAAAlC,GACA,GAAAqD,GAAApT,QAAA+Y,WAAAF,GAAAA,EAAA9I,GAAAA,EAAA8I,GACAH,EAAA5M,EAAA0M,gBAAApF,EACAsF,GACAA,EAAAzG,MAAA6C,KAAA/E,GAGAjE,EAAA4C,OAAAoG,MAAAD,KAAAzB,EAAAnB,OAAAlC,OAGAvB,EAAA,CACA,GAAAwK,GAAAxF,EAAA9C,MAAAlC,EACAxO,SAAA+Y,WAAAC,GACAlN,EAAA4C,OAAAsK,EAAAlN,EAAA4C,QACA1O,QAAAiZ,QAAAD,KACAlN,EAAA4C,OAAA+F,EAAA3I,EAAA4C,OAAAsK,IAGAlN,EAAAmG,SACAnG,EAAA4C,OAAAoK,QAAA,SAAAJ,GACA5M,EAAAmG,MAAAnG,EAAAmG,MAAAiH,OAAAR,EAAAzG,SAIA,QAAAkH,GAAAlH,GACAnG,EAAAmG,MAAAA,MAGAnG,EAAAsN,WAAA9K,EAAAsK,EAAAO,EAEArN,EAAA+C,aAAAtB,EAAAuB,MAAA6J,GAEA7M,EAAAgL,YAAAxI,EACAxC,EAAAuN,aAAAvN,EAAA+C,aAAAW,QAIA,IAAA8J,GAAAxN,EAAA+C,aAAA0K,OAGAC,EAAA,WACA,GAAAC,GAAAH,EAAA9F,EACAA,GAAAkG,WAAAxF,OAAAyF,KAAAF,GAAAG,IAAA,SAAAC,GACA,GAAAjF,KAGA,OAFAA,GAAA9I,EAAA+C,aAAAiL,SAAAD,EACAjF,EAAA7U,MAAA0Z,EAAAI,GACAjF,IAIA9I,GAAA+C,aAAAiL,UACAN,IACA1N,EAAA+C,aAAA0K,OAAA7L,EAAA,aAAA5B,EAAA+C,aAAAkL,SACAvG,EAAApB,OAAAkH,EAAA,SAAAU,EAAAC,GACAD,IAAAC,GAAAT,MACA,IAGA1N,EAAAiF,aAAA,SAAAmJ,GACAA,EAAAA,GAAApO,EAAA+C,aAAA0K,OAAA/F,EACA,IAAA2G,GAAArO,EAAAyI,QAEA,IAAAzI,EAAA8L,WAAA5X,QAAAiZ,QAAAkB,KAAAA,EAAAxL,SAAA7C,EAAA6F,WAAA7F,EAAA3B,eACA2B,EAAAsN,WAAAc,OAEA,IAAA1R,SAAA0R,GAAA,OAAAA,EAAA,CACA,GAAAE,GAAAF,EAAAhO,OAAA,SAAAiI,GACA,MAAAnU,SAAAiZ,QAAAkB,GAAAA,EAAAE,MAAA,SAAAC,GACA,OAAAta,QAAAwU,OAAAL,EAAAmG,MACAta,QAAAwU,OAAAL,EAAAgG,IAEArO,GAAAsN,WAAAgB,IAIAtO,EAAAgL,WAAA9W,QAAA4S,SAAA9G,EAAA+E,eAAA/E,EAAA+E,aAAA,GAAA7Q,QAAAiZ,QAAAnN,EAAAmG,SACAnG,EAAAmG,MAAAnG,EAAAmG,MAAAsI,MAAA,EAAAzO,EAAA+E,cAIA,IAAA2J,GAAAxa,QAAAiZ,QAAAnN,EAAAmG,OAAAnG,EAAAmG,MAAAtD,OAAA,CACA,IAAA7C,EAAAgL,WAAA9W,QAAAiZ,QAAAnN,EAAA4C,QAAA,CACA8L,EAAA,CACA,KAAA,GAAAC,GAAA,EAAAA,EAAA3O,EAAA4C,OAAAC,OAAA8L,IACAD,GAAA1O,EAAA4C,OAAA+L,GAAAxI,OAAAnG,EAAA4C,OAAA+L,GAAAxI,MAAAtD,OAAA7C,EAAA4C,OAAA+L,GAAAxI,MAAAtD,OAAA,EAKA,GAAA7C,EAAAyF,QAAAzF,EAAAyF,OAAA5C,OAAA,EAAA,CACA,GAAA+L,IAAA,CACA,IAAA5O,EAAAgL,WAAA9W,QAAAiZ,QAAAnN,EAAA4C,SAAA1O,QAAA4S,SAAA9G,EAAAhB,iCAAAgB,EAAAhB,+BAAA,EAAA,CAGA,IAAA,GADA6P,MACAC,EAAA,EAAAA,EAAA9O,EAAA4C,OAAAC,OAAAiM,IAAA,CACA,GAAAC,GAAA/O,EAAA4C,OAAAkM,GACAE,EAAAhP,EAAA2F,2BAAAzR,QAAA4S,SAAA9G,EAAA2F,0BAAAoJ,EAAAhG,OACA/I,EAAA2F,0BAAAoJ,EAAAhG,MAAA/I,EAAAhB,+BACAiQ,EAAAF,EAAA5I,OAAA4I,EAAA5I,MAAAtD,OAAAkM,EAAA5I,MAAAtD,OAAA,EACAqM,EAAAC,KAAAC,IAAAD,KAAAE,IAAAL,EAAAC,GAAA,GACAK,EAAAL,EAAAC,EACAK,EAAAD,EAAAL,EAAAC,EAAA,CACAL,GAAA7F,MAAAD,KAAAgG,EAAAhG,KAAA5C,MAAA4I,EAAA5I,MAAAsI,MAAA,EAAAS,GAAAM,WAAAF,EAAAG,WAAAF,IAEAvP,EAAA4C,OAAAiM,EAEA7O,EAAAmG,SACAnG,EAAA4C,OAAAoK,QAAA,SAAAJ,GAAA5M,EAAAmG,MAAAnG,EAAAmG,MAAAiH,OAAAR,EAAAzG,SACAyI,GAAA,EAGA,IAAAA,EAAA,CAEA,GAAAc,GAAAxb,QAAA4S,SAAA9G,EAAA0F,oCAAA1F,EAAA0F,kCAAA,EACA1F,EAAA0F,kCAAA1F,EAAAlB,yBACA,IAAA5K,QAAA4S,SAAA4I,IAAAA,EAAA,EAAA,CACA,GAAAC,GAAAD,CACA,IAAA1P,EAAAgL,WAAA9W,QAAAiZ,QAAAnN,EAAA4C,QAAA,CAEA,IAAA,GADAgN,MACAC,EAAA,EAAAA,EAAA7P,EAAA4C,OAAAC,QAAA8M,EAAA,EAAAE,IAAA,CACA,GAAAC,GAAA9P,EAAA4C,OAAAiN,GACAE,EAAAZ,KAAAE,IAAAM,EAAAG,EAAA3J,OAAA2J,EAAA3J,MAAAtD,OAAAiN,EAAA3J,MAAAtD,OAAA,EACAkN,GAAA,IACAH,EAAA5G,MAAAD,KAAA+G,EAAA/G,KAAA5C,MAAA2J,EAAA3J,MAAAsI,MAAA,EAAAsB,KACAJ,GAAAI,GAGA/P,EAAA4C,OAAAgN,EAEA5P,EAAAmG,SACAnG,EAAA4C,OAAAoK,QAAA,SAAAJ,GAAA5M,EAAAmG,MAAAnG,EAAAmG,MAAAiH,OAAAR,EAAAzG,cACAnG,EAAAgL,WAAA9W,QAAAiZ,QAAAnN,EAAAmG,SACAnG,EAAAmG,MAAAnG,EAAAmG,MAAAsI,MAAA,EAAAkB,MAMA,GAAAK,GAAA9b,QAAAiZ,QAAAnN,EAAAmG,OAAAnG,EAAAmG,MAAAtD,OAAA,CACA7C,GAAAiQ,4BAAAjQ,EAAAyF,QAAAzF,EAAAyF,OAAA5C,OAAA,EAAAsM,KAAAC,IAAAV,EAAAsB,EAAA,GAAA,EACAhQ,EAAAkQ,wBAAAlQ,EAAAiQ,4BAAA,EACA,SAAAjQ,EAAA5B,kBAAA,OAAA4B,EAAA5B,kBACAsJ,EAAAyI,uBAEAzI,EAAAwE,WAAA,gBAIAxE,EAAA0I,iBAAApQ,EAAA+C,aAAA0K,OAAA,SAAAtH,GACA,GAAAzJ,SAAAyJ,GAAA,OAAAA,EAIAnG,EAAAmG,aACA,CACA,IAAAjS,QAAAiZ,QAAAhH,GACA,KAAAzE,GAAA,QAAA,mCAAAyE,EAIAnG,GAAAiF,aAAAkB,GAGAjS,QAAAyQ,UAAA3E,EAAAqQ,QAAAC,eACAtQ,EAAAqQ,QAAAC,YAAA,SAQA,IAAAC,EAOAvQ,GAAAkG,QAAA,SAAAsK,GACA9T,SAAA8T,IAIAD,GACA5I,EAAA8I,OAAAF,GAEAA,EAAA5I,EAAA,WACA,GAAAD,EAAA/D,QAAA8B,OAAA5C,QAAA6E,EAAA/D,QAAAY,mBAAA,CACA,GAAAmM,GAAAhJ,EAAA9C,MAAA4L,EACAE,IAAAxc,QAAA+Y,WAAAyD,EAAAC,QAAA3Q,EAAAkL,aACAlL,EAAAkL,YAAA,EACAwF,EAAAA,WAAA,WACA1Q,EAAAkL,YAAA,OAIAlL,EAAA/B,gBAIA+B,EAAA4Q,SAAA,SAAA7G,GACA,IAAA/J,EAAA4F,KACA,OAAA,CAEA,IAAAoE,GAAAhK,EAAAmG,MAAA7J,QAAAyN,EAAA/J,EAAAuN,eACAqD,EAAA5G,GAAAhK,EAAA+F,WAEA,UAAA6K,GAAA5G,EAAA,KAIA4G,IAAA1c,QAAAC,YAAA6L,EAAAqE,sBACA0F,EAAAnF,MAAA5E,EAAAqE,qBAGAuM,GAGA,IAAAC,GAAA,SAAA5M,GACA,MAAAjE,GAAAyI,UAAAvU,QAAAiZ,QAAAnN,EAAAyI,WACAzI,EAAAyI,SAAArI,OAAA,SAAA0Q,GAAA,MAAA5c,SAAAwU,OAAAoI,EAAA7M,KAAApB,OAAA,GAGAuG,IAqBApJ,GAAAkJ,WAAA,SAAAa,GAEA,GAAA/J,EAAA4F,KAAA,CAEA,GAAA3B,GAAA8F,EAAA/J,EAAAuN,cACAvD,EAAAhK,EAAAmG,MAAA7J,QAAA2H,GACAiF,GAAA,CAEA,IAAAc,GAAA,IAAA9V,QAAAyQ,UAAA3E,EAAAmE,0BAAAnE,EAAA6F,UAAA,CAEA,GAAA5B,EAAA8M,MAAA,OAAA,CAEA,IAAA/Q,EAAA6F,SACA,GAAA7F,EAAAuJ,iBAAAvJ,EAAAgE,YAAAhE,EAAA+C,cAAA/C,EAAA+C,aAAAG,WAAA,CACA,GAAAiH,GAAAnK,EAAAgE,WAAAC,EACAiF,KAAAlJ,EAAAuJ,gBAAAY,OAEAjB,GAAA2H,EAAA5M,IAIAiF,GAAAhV,QAAAyQ,UAAA3E,EAAAmE,2BACA+E,IAAAa,EAAAnF,MAAA5E,EAAAmE,0BAGA8E,EAAAhF,EAAAiF,GAGA,MAAAA,KAIAxB,EAAA0I,iBAAA,WAAA,MAAApQ,GAAAyI,UAAA,WACA,GAAAzI,EAAAgE,YAAAhE,EAAA6F,UAAA7F,EAAA+C,cAAA/C,EAAA+C,aAAAG,WAAA,CACA,GAAA8N,GAAA5I,OAAA6I,OAAA,KACA,IAAA/c,QAAAiZ,QAAAnN,EAAAyI,UACA,IAAA,GAAAJ,GAAA,EAAAA,EAAArI,EAAAyI,SAAA5F,OAAAwF,IAAA,CACA,GAAAtM,GAAAiE,EAAAgE,WAAAhE,EAAAyI,SAAAJ,GACA2I,GAAAjV,IAAA,EAGAiE,EAAAuJ,gBAAAyH,MAEAhR,GAAAuJ,gBAAA,OAMAvJ,EAAAuK,OAAA,SAAAtG,EAAA9F,EAAA+S,GACA,GAAAld,EAAAiQ,KAAAqF,EAAArF,GAAA,CAEA,IAAAjE,EAAAmG,QAAAnG,EAAAyF,SAAAzF,EAAAgG,QAAAC,YAAA,MAEA,KAAAhC,IAAAqF,EAAArF,GAAA,CAMA,GAJAjE,EAAAyL,sBAAA,EACAyF,IAAA,UAAAA,EAAAC,MAAA,aAAAD,EAAAC,OAAAlN,IACAjE,EAAAyL,sBAAA,GAEAzL,EAAAgG,QAAAC,aAAAjG,EAAAyL,wBAAA,EAAA,CAEA,GAAAzL,EAAAmM,gBAAA,EACA,GAAAnM,EAAA+F,YAAA,GAIA,GAHArJ,SAAAuH,IACAA,EAAAvH,SAAAsD,EAAAgG,QAAAsF,IAAAtL,EAAAgG,QAAAsF,IAAAtL,EAAAyF,QAAAzF,EAAAyF,SAEAxB,GAAA/P,QAAAwU,OAAA1I,EAAAmG,MAAA,GAAAlC,GACA,WAIAA,GAAAjE,EAAAmG,MAAAnG,EAAA+F,iBAKA,IAAA,IAAA/F,EAAA+F,YAAA,CAGA,GAAArJ,SAAAuH,EAAA,MAIA,IAAAvH,SAAAsD,EAAAgG,QAAAsF,KAAA,gBAAArH,IAEA,GADAA,EAAAjE,EAAAgG,QAAAsF,IAAArH,IACAA,EAAA,WAEA,gBAAAA,KAEAA,EAAAA,EAAAxE,QAAAO,EAAAmM,aAAA,IAAAiF,QAKA,GAAAP,EAAA5M,GAEA,WADAjE,GAAAwK,MAAArM,GAIAoK,IACAb,EAAAwE,WAAA,aAAAjI,GAEAjE,EAAA9B,eACA8B,EAAAwK,MAAArM,MAOA6B,EAAAwK,MAAA,SAAArM,GACA6B,EAAA4F,OACA5F,EAAAqQ,SAAArQ,EAAAqQ,QAAAgB,aAAArR,EAAAqQ,QAAAgB,cACArR,EAAA4F,MAAA,EACA2C,IACAb,EAAAwE,WAAA,YAAA/N,KAIA6B,EAAAsR,SAAA,WACAtR,EAAAmL,OAAAnL,EAAAuR,WAAA,GAAApG,SAGAnL,EAAAwR,MAAA,SAAAN,GACAlR,EAAAuK,OAAA,MACA2G,EAAAO,kBACA9J,EAAA,WACA3H,EAAAqL,SAAA,GAAAF,SACA,GAAA,IAIAnL,EAAA0R,OAAA,SAAA5V,GACAkE,EAAA4F,KACA5F,EAAAwK,QAEAxK,EAAA8F,WAEAhK,EAAA6V,iBACA7V,EAAA2V,mBAKAzR,EAAA2J,SAAA,WACA,OAAA,GAGAjC,EAAApB,OAAA,WACA,MAAApS,SAAAyQ,UAAA3E,EAAAiK,uBAAA,KAAAjK,EAAAiK,sBACAT,EAwCA,IAAAoI,GAAA,KACAC,GAAA,CACA7R,GAAA8R,gBAAA,WAEA,GAAAC,GAAA/R,EAAA6L,YAAA,GACAnB,EAAA1K,EAAA8D,SAAA,GACAkO,EAAA,WAEA,MAAAtH,GAAAuH,cAAAF,EAAAG,cAEAC,EAAA,SAAAC,GACA,GAAA,IAAAA,EACA,OAAA,CAEA,IAAAC,GAAAD,EAAAL,EAAAO,UAGA,OAFAD,GAAA,KAAAA,EAAAD,GACApS,EAAA6L,YAAA0G,IAAA,QAAAF,EAAA,OACA,EAGArS,GAAA6L,YAAA0G,IAAA,QAAA,QACA5K,EAAA,WACA,OAAAiK,GAAAO,EAAAH,OACAJ,EAAAlK,EAAApB,OAAA,WACAuL,IACAA,GAAA,EACAnK,EAAA8K,aAAA,WACAX,GAAA,EACAM,EAAAH,OACAJ,IACAA,EAAA,UAIA1d,QAAAue,UA8CAzS,EAAA6L,YAAAO,GAAA,UAAA,SAAAtQ,GAEA,GAAAqO,GAAArO,EAAAE,QAEA5H,EAAAE,MAAAF,EAAAG,KAAA+H,QAAA6N,KACArO,EAAA6V,iBACA7V,EAAA2V,mBAGA/J,EAAAgL,OAAA,WAEA,GAAAC,IAAA,CAEA,KAAA3S,EAAAmG,MAAAtD,OAAA,GAAA7C,EAAAgG,QAAAC,eACAiE,EAAAC,IAAAnK,EAAAlC,gBACAhC,EAAA6V,iBACA7V,EAAA2V,mBAEAzR,EAAAuL,cAAAtF,aAAA,CACA,IAAA,GAAAoC,GAAA,EAAAA,EAAArI,EAAAuL,cAAAC,OAAA3I,OAAAwF,IACArI,EAAAuL,cAAAC,OAAAnD,KAAAjU,EAAAmB,IAAAuG,EAAA8W,UAEA5S,EAAAyF,OAAA5C,OAAA,IACA8P,GAAA,EAIAA,IACAhL,EAAA,WACA3H,EAAA6L,YAAAgH,eAAA,SACA,IAAAC,GAAA9S,EAAAyF,OAAAhG,QAAArL,EAAAmB,IAAAuG,EAAA8W,SAAA,IAAAxB,MACApR,GAAAgG,QAAAsF,MACAwH,EAAA9S,EAAAgG,QAAAsF,IAAAwH,IAEAA,GAAA9S,EAAAuK,OAAAuI,GAAA,QAQA1e,EAAAiI,mBAAA8N,IAAAnK,EAAAmG,MAAAtD,OAAA,GACA4H,IAGAN,IAAA/V,EAAAE,OAAA6V,IAAA/V,EAAAG,MACAuH,EAAA6V,iBACA7V,EAAA2V,qBAKAzR,EAAA6L,YAAAO,GAAA,QAAA,SAAAtQ,GACA,GAAAsS,EAWA,IARAA,EADA2E,OAAAC,eAAAD,OAAAC,cAAAC,QACAF,OAAAC,cAAAC,QAAA,SAEAnX,EAAAoX,eAAApX,GAAAkX,cAAAC,QAAA,cAIA7E,EAAApO,EAAAyF,OAAA2I,EAEAA,GAAAA,EAAAvL,OAAA,EAEA,GAAA7C,EAAAuL,cAAAtF,YAAA,CAEA,IAAA,GADAE,MACAkC,EAAA,EAAAA,EAAArI,EAAAuL,cAAAC,OAAA3I,OAAAwF,IAAA,CACA,GAAA8K,GAAA/e,EAAAoI,YAAAwD,EAAAuL,cAAAC,OAAAnD,KAAArI,EAAAuL,cAAAC,OAAAnD,EACA,IAAA+F,EAAA9R,QAAA6W,MAAA,CACAhN,EAAAiI,EAAAgF,MAAAD,EACA,QAGA,IAAAhN,EAAAtD,SACAsD,GAAAiI,GAEA,IAAAiF,GAAArT,EAAAyF,MACAvR,SAAA8Y,QAAA7G,EAAA,SAAAlC,GACA,GAAA6O,GAAA9S,EAAAgG,QAAAsF,IAAAtL,EAAAgG,QAAAsF,IAAArH,GAAAA,CACA6O,IACA9S,EAAAuK,OAAAuI,GAAA,KAGA9S,EAAAyF,OAAA4N,GAAA7K,EACA1M,EAAA6V,iBACA7V,EAAA2V,sBACAzR,GAAAiL,QACAjL,EAAAiL,MAAAmD,GACApO,EAAAyF,OAAA+C,EACA1M,EAAA6V,iBACA7V,EAAA2V,qBAKAzR,EAAA6L,YAAAO,GAAA,SAAA,WACAzE,EAAA,WACAY,OA8BA,IAAA+K,GAAAzR,EAAA,WACA7B,EAAA8R,mBACA,GAEA5d,SAAAyI,QAAAgE,GAAApD,KAAA,SAAA+V,GAEA5L,EAAA6L,IAAA,WAAA,WACAvT,EAAA6L,YAAAW,IAAA,mCACAtY,QAAAyI,QAAAgE,GAAA6L,IAAA,SAAA8G,KAGA5L,EAAApB,OAAA,sBAAA,SAAAP,GACAA,GACAjC,EAAA0P,KAAA,SAAApR,KACA,wBACA,yBAAApC,EAAAyT,YAAA,IAAA1N,KAGA2B,EAAApB,OAAA,eAAA,SAAAV,GACAA,GACA9B,EAAA0P,KAAA,SAAAhM,WAAA,8BAIA9J,EAAAkC,UAAA,YACA,YAAA,iBAAA,iBAAA,YAAA,WAAA,SAAA,WAAA,UACA,SAAAc,EAAAc,EAAAE,EAAAgS,EAAA/R,EAAAC,EAAA+F,EAAAhH,GAEA,OACAmB,SAAA,KACAE,YAAA,SAAAC,EAAAK,GACA,GAAAzE,GAAAyE,EAAAzE,OAAA2D,EAAA3D,KACA,OAAAA,IAAA3J,QAAAyQ,UAAArC,EAAAuD,UAAA,4BAAA,qBAEApG,SAAA,EACAQ,YAAA,EACA8B,SAAA,WAAA,YACAjC,OAAA,EAEA2H,WAAA,eACAkM,aAAA,UACAtR,QAAA,SAAAJ,EAAAK,GAGA,GAAAsR,GAAA,kBAAAC,KAAAvR,EAAAwR,QACA,IAAAF,EAAA,CACA,GAAAG,GAAA,IAAAH,EAAA,GAAA,KAAAA,EAAA,GAAA,GACAtR,GAAAwR,QAAAC,EACA9R,EAAAG,KAAA,WAAA2R,GAYA,MARA7f,SAAAyQ,UAAArC,EAAAuD,UACA5D,EAAA9B,OAAA,yBAAAqH,WAAA,YAEAvF,EAAA9B,OAAA,uBAEAmC,EAAA0R,UACA/R,EAAApF,iBAAA,0BAAA,GAAAoX,GAAA3R,EAAA0R,SAEA,SAAAlU,EAAAnD,EAAAoD,EAAAmU,EAAAC,GA8IA,QAAAC,GAAAtY,GACA,GAAA6H,EAAAiC,KAAA,CAEA,GAAAyO,IAAA,CAUA,IALAA,EAHAtB,OAAAuB,OAGAvB,OAAAuB,OAAAD,SAAA1X,EAAA,GAAAb,EAAAyY,QAEA5X,EAAA,GAAA0X,SAAAvY,EAAAyY,SAGAF,IAAA1Q,EAAA8H,qBAAA,CACA,GAAAtN,EACA,IAAAwF,EAAAxF,aAOAA,GAAA,MAPA,CAEA,GAAAqW,IAAA,QAAA,SAAA,WAAA,UACAC,EAAAvgB,QAAAyI,QAAAb,EAAAyY,QAAA9M,WAAA,WACAtJ,GAAAsW,GAAAA,IAAA9Q,EACAxF,IAAAA,GAAAqW,EAAAlY,QAAAR,EAAAyY,OAAAG,QAAArP,gBAIA1B,EAAA6G,MAAArM,GACA2B,EAAA6U,UAEAhR,EAAA8H,sBAAA,GAuFA,QAAAmJ,KAEA,GAAAC,GAAAnB,EAAA/W,EAGAqB,GAAA9J,QAAAyI,QAAA,6CACAqB,EAAA,GAAA8W,MAAAhU,MAAA+T,EAAA/T,MAAA,KACA9C,EAAA,GAAA8W,MAAA9T,OAAA6T,EAAA7T,OAAA,KACArE,EAAAoY,MAAA/W,GAIAgX,EAAArY,EAAA,GAAAmY,MAAAhU,MAGAJ,EAAA8S,KAAA,QAAArT,OAAAxD,GAEAA,EAAA,GAAAmY,MAAA1P,SAAA,WACAzI,EAAA,GAAAmY,MAAAzT,KAAAwT,EAAAxT,KAAA,KACA1E,EAAA,GAAAmY,MAAA7T,IAAA4T,EAAA5T,IAAA,KACAtE,EAAA,GAAAmY,MAAAhU,MAAA+T,EAAA/T,MAAA,KAGA,QAAAmU,KACA,OAAAjX,IAMAA,EAAAkX,YAAAvY,GACAqB,EAAA,KAEArB,EAAA,GAAAmY,MAAA1P,SAAA,GACAzI,EAAA,GAAAmY,MAAAzT,KAAA,GACA1E,EAAA,GAAAmY,MAAA7T,IAAA,GACAtE,EAAA,GAAAmY,MAAAhU,MAAAkU,EAGArR,EAAA2N,YArSA,GAAA3N,GAAAuQ,EAAA,GACA7D,EAAA6D,EAAA,EAEAvQ,GAAA8P,YAAAjS,EAAAhD,aACAmF,EAAAwR,UAAApV,EAAAqV,OAAA,aACAzR,EAAA0R,cAAA1R,EAAAwR,UAAA,SACAxR,EAAA2R,WAAA,YAAA3R,EAAA8P,YAEA9P,EAAAzF,cAAA,WACA,MAAAhK,SAAAyQ,UAAA5E,EAAA7B,eACA0D,EAAA7B,EAAA7B,iBAEAsD,EAAAtD,iBAIA4B,EAAAwG,OAAA,eAAA,WACA,GAAAnI,GAAA2B,EAAA8E,MAAA7E,EAAA5B,aACAwF,GAAAxF,aAAAzB,SAAAyB,EAAAA,EAAAqD,EAAArD,eAGAwF,EAAA4R,iBAAA3T,EAAA7B,EAAAyV,UACA7R,EAAA8R,iBAAA7T,EAAA7B,EAAA2V,UAGA/R,EAAA0M,QAAAA,EAEA1M,EAAAgS,cAAA,SAAA/I,GACA,MAAAjJ,GAAAqH,WAAA4B,GAAAA,EAAA7D,MAGAhJ,EAAA6V,UACA7V,EAAAwG,SAAA,WAAA,SAAAtS,GACA0P,EAAA4N,WAAAnP,KAAA,WAAAnO,GACA0I,EAAA6K,WAAA,cAIA1H,EAAAwG,OAAA,WAAA,MAAAxG,GAAA8E,MAAA7E,EAAAjC,gBAAA,SAAAoQ,GACAvK,EAAA7F,cAAApB,SAAAwR,EAAAA,EAAA1M,EAAA1D,gBAGAgC,EAAAwG,OAAA,WAAA,WACA,GAAAvI,GAAA+B,EAAA8E,MAAA7E,EAAAhC,SACA4F,GAAA5F,SAAArB,SAAAqB,EAAAA,EAAAyD,EAAAzD,WAGAgC,EAAAwG,SAAA,iBAAA,WAEA,GAAA3H,GAAAkB,EAAA8E,MAAA7E,EAAAnB,eACA+E,GAAA/E,eAAAlC,SAAAkC,GAAAA,IAGAmB,EAAAwG,SAAA,QAAA,WAEA5C,EAAAkS,MAAA3hB,QAAAyQ,UAAA5E,EAAA8V,OAAArR,SAAAzE,EAAA8V,MAAA,IAAAnZ,SAGAoD,EAAAwG,OAAA,iBAAA,WACA,GAAAjI,GAAAyB,EAAA8E,MAAA7E,EAAA1B,eACAsF,GAAAtF,eAAA3B,SAAA2B,EAAAA,EAAAmD,EAAAnD,iBAGA0B,EAAAwG,SAAA,WAAA,WAEA5C,EAAAyH,SAAA1O,SAAAqD,EAAAqL,UAAArL,EAAAqL,WAGArL,EAAAwG,SAAA,mBAAA,WAEA,GAAAjI,GAAAwB,EAAA8E,MAAA7E,EAAAzB,iBACAqF,GAAArF,iBAAA5B,SAAA4B,GAAAA,IAGAyB,EAAAwG,SAAA,QAAA,WACA5C,EAAAsH,MAAAnL,EAAA8E,MAAA7E,EAAAkL,SAGAlL,EAAAwG,SAAA,UAAA,WACA,GAAA7J,SAAAqD,EAAAiG,QACA,CAEA,GAAA8P,GAAAhW,EAAA8E,MAAA7E,EAAAiG,QACArC,GAAAqC,SAAAC,aAAA,EAAAqF,IAAAwK,KAAA,EAAAA,EAAApZ,YAIAiH,GAAAqC,SAAAC,aAAA,EAAAqF,IAAA5O,UAIAqD,EAAAwG,SAAA,eAAA,WACA7J,SAAAqD,EAAAiG,UAIA,UAAAjG,EAAAoM,aACAxI,EAAAwI,cAAA,EAIAxI,EAAAwI,aAAAzP,SAAAqD,EAAAoM,aAAApM,EAAAoM,aAAA,WAKApM,EAAAwG,SAAA,gBAAA,WACA,GAAA7J,SAAAqD,EAAAiG,QAAA,CACA,GAAAwF,GAAA9O,SAAAqD,EAAAwL,cAAAxL,EAAAwL,cAAA6H,MAAA,MAAA,IAAA,QACAzP,GAAA4H,eAAAtF,aAAA,EAAAuF,OAAAA,MAIAzL,EAAAwG,SAAA,iBAAA,WAEA,GAAA7H,GAAAoB,EAAA8E,MAAA7E,EAAArB,eACAiF,GAAAjF,eAAAhC,SAAAgC,EAAAA,EAAA8C,EAAA9C,iBAGAqB,EAAAwG,SAAA,eAAA,WACA,GAAA5H,GAAAoB,EAAApB,YACAgF,GAAAhF,aAAAjC,SAAAiC,EAAAoB,EAAApB,aAAA6C,EAAA7C,eAIAzK,QAAAyQ,UAAA5E,EAAAgW,YACApO,EAAA,WACAhE,EAAA2N,aAKApd,QAAAyQ,UAAA5E,EAAAiW,UACAlW,EAAAyT,IAAAxT,EAAAiW,QAAA,WACArO,EAAA,WACAhE,EAAA2N,eAwCA3Q,EAAA6C,SAAAC,iBAAA,QAAA2Q,GAAA,GAEAtU,EAAAyT,IAAA,WAAA,WACA5S,EAAA6C,SAAAyS,oBAAA,QAAA7B,GAAA,KAIAD,EAAArU,EAAA,SAAAI,GAMA,GAAAgW,GAAAhiB,QAAAyI,QAAA,SAAAwD,OAAAD,GAEAiW,EAAAD,EAAArZ,iBAAA,mBAGA,IAFAsZ,EAAA3O,WAAA,mBACA2O,EAAA3O,WAAA,wBACA,IAAA2O,EAAAtT,OACA,KAAAnB,GAAA,cAAA,6CAAAyU,EAAAtT,OAEAlG,GAAAE,iBAAA,oBAAAqY,YAAAiB,EAEA,IAAAC,GAAAF,EAAArZ,iBAAA,qBAGA,IAFAuZ,EAAA5O,WAAA,qBACA4O,EAAA5O,WAAA,0BACA,IAAA4O,EAAAvT,OACA,KAAAnB,GAAA,cAAA,+CAAA0U,EAAAvT,OAEAlG,GAAAE,iBAAA,sBAAAqY,YAAAkB,EAEA,IAAAC,GAAAH,EAAArZ,iBAAA,uBACAwZ,GAAA7O,WAAA,uBACA6O,EAAA7O,WAAA,4BACA,GAAA6O,EAAAxT,QACAlG,EAAAE,iBAAA,wBAAAqY,YAAAmB,EAGA,IAAAC,GAAAJ,EAAArZ,iBAAA,oBACAyZ,GAAA9O,WAAA,oBACA8O,EAAA9O,WAAA,yBACA,GAAA8O,EAAAzT,OACAlG,EAAAE,iBAAA,qBAAAqY,YAAAoB,GAEA3Z,EAAAE,iBAAA,qBAAA0Z,QAGA,IAAAC,GAAAN,EAAArZ,iBAAA,oBACA2Z,GAAAhP,WAAA,oBACAgP,EAAAhP,WAAA,yBACA,GAAAgP,EAAA3T,OACAlG,EAAAE,iBAAA,qBAAAqY,YAAAsB,GAEA7Z,EAAAE,iBAAA,qBAAA0Z,UAKA,IAAA9X,GAAAqB,EAAA8E,MAAA7E,EAAAtB,eACA/B,SAAA+B,EAAAA,EAAA+C,EAAA/C,gBACAqB,EAAAwG,OAAA,eAAA,SAAAmQ,GACAA,EACA7B,IAEAK,MAMAnV,EAAAyT,IAAA,WAAA,WACA0B,MAKA,IAAAjX,GAAA,KACAgX,EAAA,GA6CA0B,EAAA,KACAC,EAAA,cAGA7W,GAAAwG,OAAA,eAAA,WAEA,SAAA3C,EAAAvF,kBAAA,OAAAuF,EAAAvF,kBACA0B,EAAAqQ,wBAKA,IAAAyG,GAAA,SAAA/B,EAAAgC,GAEAhC,EAAAA,GAAAnB,EAAA/W,GACAka,EAAAA,GAAAnD,EAAAgD,GAEAA,EAAA,GAAA5B,MAAA1P,SAAA,WACAsR,EAAA,GAAA5B,MAAA7T,IAAA4V,EAAA7V,UAAA,KACArE,EAAAuF,SAAAyU,IAIAG,EAAA,SAAAjC,EAAAgC,GAEAla,EAAAoa,YAAAJ,GAEA9B,EAAAA,GAAAnB,EAAA/W,GACAka,EAAAA,GAAAnD,EAAAgD,GAEAA,EAAA,GAAA5B,MAAA1P,SAAA,GACAsR,EAAA,GAAA5B,MAAA7T,IAAA,IAIA+V,EAAA,WAEArP,EAAA,WACA,GAAA,OAAAhE,EAAAvF,iBAEAwY,QACA,CAEAja,EAAAoa,YAAAJ,EAEA,IAAA9B,GAAAnB,EAAA/W,GACAka,EAAAnD,EAAAgD,GAGAtV,EAAAV,EAAA,GAAAS,gBAAAC,WAAAV,EAAA,GAAAuW,KAAA7V,SAGAyT,GAAA5T,IAAA4T,EAAA7T,OAAA6V,EAAA7V,OAAAI,EAAAV,EAAA,GAAAS,gBAAA2J,aAEA8L,EAAA/B,EAAAgC,GAGAC,EAAAjC,EAAAgC,GAKAH,EAAA,GAAA5B,MAAAoC,QAAA,KAIAC,GAAA,CAEArX,GAAAqQ,qBAAA,WACA,GAAAxM,EAAAiC,KAAA,CAGA,GAFA8Q,EAAAxiB,QAAAyI,QAAAA,GAAAE,iBAAA,uBAEA,IAAA6Z,EAAA7T,OACA,MASA,IALA,KAAAc,EAAA8B,QAAA0R,IACAT,EAAA,GAAA5B,MAAAoC,QAAA,EACAC,GAAA,IAGAzD,EAAAgD,GAAA1V,QAAA2C,EAAA+H,UAAA/H,EAAA+H,SAAAU,IAAAzI,EAAA+H,SAAAW,QAAAqK,GAAA,CACA,GAAAU,IAAA,CAEAzT,GAAA+H,SAAAU,GAAA,QAAAsK,EAAA,SAAAzZ,EAAAsP,GACA,UAAAA,GAAA6K,IACAJ,IACAI,GAAA,SAIAJ,SAEA,CACA,GAAA,OAAAN,GAAA,IAAAA,EAAA7T,OACA,MAIA6T,GAAA,GAAA5B,MAAAoC,QAAA,EACAR,EAAA,GAAA5B,MAAA1P,SAAA,GACAsR,EAAA,GAAA5B,MAAA7T,IAAA,GACAtE,EAAAoa,YAAAJ,WAQAjZ,EAAAkC,UAAA,kBAAA,iBAAA,SAAA4B,GACA,OACAQ,YAAA,SAAAC,GAEAA,EAAAC,SAAA,mBAGA,IAAArE,GAAAoE,EAAAE,SAAAC,KAAA,UAAAZ,EAAA3D,KACA,OAAAA,GAAA,oBAEAiE,SAAA,KACA7B,YAAA,EACAR,SAAA,MAIA/B,EAAAkC,UAAA,kBAAA,iBAAA,SAAA4B,GACA,OACAQ,YAAA,SAAAC,GAEAA,EAAAC,SAAA,mBAGA,IAAArE,GAAAoE,EAAAE,SAAAC,KAAA,UAAAZ,EAAA3D,KACA,OAAAA,GAAA,oBAEAiE,SAAA,KACA7B,YAAA,EACAR,SAAA,MAIA/B,EAAAkC,UAAA,iCAAA,WAAA,SAAA+H,GACA,OACA7F,SAAA,KACAC,SAAA,aACAjC,OACAuX,UAAA,mCAEAxX,KAAA,SAAA6H,EAAA5D,EAAA/D,EAAAwK,GAOA,QAAA8M,KACA,MAAAnjB,SAAAC,YAAAuT,EAAA2P,YAAA3P,EAAA2P,UAGA,QAAAC,KACA,MAAA3T,GAAAkC,UAAAlC,EAAAf,OACAkB,EAAAjH,iBAAA,mCAEA0a,QAAAlY,MAAA,sFAKA,QAAAmY,KACAH,KACAnjB,QAAA8Y,QAAAsK,IAAA,SAAAxb,GACA,GAAAa,GAAAzI,QAAAyI,QAAAb,EAGAa,GAAA8a,SAAA,uCACA9a,EAAAuF,SAAA,qCAEAvF,EAAAyP,GAAA,QAAA,WACA,GAAAiL,IAAA,CACA,GAAAzK,GAAAjJ,EAAA+I,gBAAA/P,EAAA+a,QAAA,EAEAxjB,SAAA8Y,QAAAJ,EAAAzG,MAAA,SAAAlC,GACA0D,EAAA,WACAhE,EAAA4G,OAAAtG,GAAA,EAAA,eAUA,QAAA0T,KACAN,KACAnjB,QAAA8Y,QAAAsK,IAAA,SAAAxb,GACA,GAAAa,GAAAzI,QAAAyI,QAAAb,EACAa,GAAAoa,YAAA,qCACApa,EAAA6P,IAAA,WAhDA,GAAA7I,GAAA4G,EAAA,EACArW,SAAAC,YAAAuT,EAAA2P,aACA3P,EAAA2P,WAAA,GAoDA3P,EAAApB,OAAA,YAAA,WACA+Q,IAGAG,IAFAG,MAMAjQ,EAAApB,OAAA,iBAAAkR,GACA9P,EAAApB,OAAA,WACA,MAAA3C,GAAA8E,UAAA9E,EAAA8E,SAAA5F,OAAAc,EAAA8E,SAAA5F,WACA2U,QAKA9Z,EAAAkC,UAAA,iBAAA,iBAAA,SAAA4B,GAqCA,QAAAoW,GAAA3a,EAAA4a,GACA,MAAA5a,GAAA,GAAA6a,aAAAD,GACA5a,EAAAmF,KAAAyV,GAEA5a,EAAA,GAAA6a,aAAA,QAAAD,GACA5a,EAAAmF,KAAA,QAAAyV,GAEA5a,EAAA,GAAA6a,aAAA,KAAAD,GACA5a,EAAAmF,KAAA,KAAAyV,GADA,OA3CA,OACA/V,SAAA,KACAC,QAAA,YACAtC,SAAA,EACAQ,YAAA,EACA+B,YAAA,SAAAC,GAEAA,EAAAC,SAAA,kBAEA,IAAAC,GAAAF,EAAAE,SAEAtE,EAAA+Z,EAAAzV,EAAA,UAAAX,EAAA3D,MACAka,EAAA7jB,QAAAyQ,UAAAiT,EAAAzV,EAAA,YAEA,OAAAtE,IAAAka,EAAA,2BAAA,oBAEAlY,KAAA,SAAAC,EAAAnD,EAAAoD,EAAA4D,GAMA,QAAAqU,GAAAC,GACAtU,EAAAuU,aAAAhkB,QAAAyQ,UAAAsT,KAAA,KAAAA,GAAA,SAAAA,EAAA5S,eANA1B,EAAAsG,qBAAAlK,EAAAoY,aACApY,EAAAwG,SAAA,cAAA,SAAAvI,GACA2F,EAAA3F,YAAAtB,SAAAsB,EAAAA,EAAAwD,EAAAxD,cAOA+B,EAAAwG,SAAA,aAAAyR,GACAA,EAAAjY,EAAAmY,YAEAvU,EAAAkC,UACAlC,EAAAmO,uBAkBApU,EAAAkC,UAAA,oBAAA,iBAAA,WAAA,iBAAA,SAAA8B,EAAAiG,EAAAnG,GACA,OACAM,SAAA,KACAC,SAAA,YAAA,YAEA0F,YAAA,SAAA,WAAA,SAAAC,EAAAC,GAEA,GAEA0I,GAFArQ,EAAAjD,KACA4G,EAAA+D,EAAA/D,OAGAzP,SAAAC,YAAAwP,EAAA8E,YACA9E,EAAA8E,aAGAf,EAAArB,WAAA,WAAAgK,EAAA3I,EAAA2I,UAEArQ,EAAAoY,oBAEApY,EAAAqY,YAAA,WACAhI,EAAAiI,cAAAC,KAAAC,OACAxY,EAAAyY,oBAGAzY,EAAAyY,iBAAA,WAIA9U,EAAAsB,cACAtB,EAAAsB,eAEAtB,EAAAmO,iBACAnO,EAAAmO,mBAKA9R,EAAA0Y,aAAA,SAAAC,GAGA,GAAAhV,EAAAgG,SAAA,KAAAgP,GAAA,OAAA,CAEA,IAAAC,GAAAjV,EAAA8E,SAAAkQ,GAEAzU,IAiBA,OAhBAA,GAAAP,EAAAZ,aAAAW,UAAAkV,EAEAjV,EAAA8E,SAAAY,OAAAsP,EAAA,GACA3Y,EAAAoY,oBACAzU,EAAAmO,kBAGAnK,EAAA,WACAhE,EAAA8R,iBAAA/N,GACAmR,MAAAD,EACAE,OAAAnV,EAAAZ,aAAAgW,YAAArR,EAAAxD,OAIAlE,EAAAqY,eAEA,KAKA1E,aAAA,kBAEA9T,KAAA,SAAAC,EAAAnD,EAAAoD,EAAAmU,GAiKA,QAAA8E,GAAAC,GACA,MAAA/kB,SAAA4S,SAAAmS,EAAAC,gBAAAD,EAAAC,eAEAD,EAAAhlB,MAAA4O,OAGA,QAAAsW,GAAAhP,GAeA,QAAAiP,KACA,OAAAjP,GACA,IAAA/V,GAAAK,KAEA,OAAA4kB,EAAAjB,iBAAAkB,EAEAC,CAEA,KAAAnlB,GAAAO,MAEA,OAAA0kB,EAAAjB,kBAAA7Q,IAAAgS,EAKAC,GAJA7V,EAAAmC,YACA,EAKA,KAAA1R,GAAAgB,UAEA,OAAAikB,EAAAjB,iBACAiB,EAAAX,aAAAnR,GACA+R,EAEA/R,EAKAgS,CAGA,KAAAnlB,GAAAiB,OAEA,SAAAgkB,EAAAjB,mBACAiB,EAAAX,aAAAW,EAAAjB,kBACA7Q,IAjDA,GAAAkS,GAAAT,EAAArV,EAAAkI,YAAA,IACAhJ,EAAAc,EAAA8E,SAAA5F,OAEA6W,EAAA,EACAH,EAAA1W,EAAA,EACA0E,EAAA8R,EAAAjB,iBACAoB,EAAAH,EAAAjB,iBAAA,EACAkB,EAAAD,EAAAjB,iBAAA,EACAuB,EAAApS,CAEA,SAAAkS,EAAA,GAAA9V,EAAA8B,OAAA5C,QAAAsH,GAAA/V,EAAAO,SAEAgP,EAAA6G,QA2CAmP,EAAAP,IAEAzV,EAAA8E,SAAA5F,QAAA8W,KAAA,EACAN,EAAAjB,iBAAAjJ,KAAAE,IAAAkK,EAAApK,KAAAC,IAAAsK,EAAAC,IADAN,EAAAjB,qBAGA,GAgIA,QAAAwB,GAAAC,GACA,GAAAnd,SAAAmd,GAAAnd,SAAAiH,EAAA8B,OACA,OAAA,CAEA,IAAAqU,GAAAD,EAAAzZ,OAAA,SAAA2Z,GACA,MAAArd,UAAAiH,EAAA8B,OAAAuU,eAAAtd,SAAAqd,GAGAA,EAAAC,gBAAArW,EAAA8B,OAAAuU,gBACAnX,OAAA,CAEA,OAAAiX,GAEA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,KACA,IAAAlmB,QAAAiZ,QAAA+M,GAEA,IAAA,GADAG,GAAAnmB,QAAAomB,KAAAJ,GACA7R,EAAA,EAAAA,EAAAgS,EAAAxX,OAAAwF,IAEA,GAAA3L,SAAAiH,EAAAqC,QAAAsF,IAEA+O,EAAAhS,GAAA,IAAA1E,EAAAwI,eAAAgO,IACAC,EAAA/R,OAGA,CACA,GAAAkS,GAAAF,EAAAhS,EACAnU,SAAAsmB,SAAAD,KACAA,EAAAxJ,OAAA,GAEA7c,QAAAwU,OAAA6R,EAAAJ,KACAC,EAAA/R,GAKA,MAAA+R,GAtYA,GAAAzW,GAAAuQ,EAAA,GACA7D,EAAAvQ,EAAAuQ,QAAA6D,EAAA,GACAmF,EAAAvZ,EAAAuZ,eAIA1V,GAAAkC,UAAA,EAGAlC,EAAA4N,WAAA5N,EAAAkI,YAGAwE,EAAAoK,SAAA,SAAAxmB,GACA,OAAAA,GAAA,IAAAA,EAAA4O,QAIAwN,EAAAqK,SAAAC,QAAA,WACA,GACA7R,GADA5E,KAEA0W,IAGApZ,GAAA3C,wBAAA3K,QAAAiZ,QAAAkD,EAAAC,eACAsK,EAAAvK,EAAAC,YACAsK,EAAA/X,OAAA,EAGA,KAAA,GAAAgG,GAAAlF,EAAA8E,SAAA5F,OAAA,EAAAgG,GAAA,EAAAA,IACA3E,KACAA,EAAAP,EAAAZ,aAAAW,UAAAC,EAAA8E,SAAAI,GACAC,EAAAnF,EAAAZ,aAAAgW,YAAAjZ,EAAAoE,GAEA1C,EAAA3C,wBAAA3K,QAAAiZ,QAAAkD,EAAAC,aACAsK,EAAA5R,KAAAF,GAEA8R,EAAAD,QAAA7R;AASA,MAJAtH,GAAA3C,wBAAA3K,QAAAiZ,QAAAkD,EAAAC,cAAA3M,EAAA8E,SAAA5F,OAAA,GACA+X,EAAAC,UAGAD,IAIAvK,EAAAyK,YAAAH,QAAA,SAAAI,GACA,GAEAjS,GAFAsF,EAAAzK,EAAAZ,cAAAY,EAAAZ,aAAA0K,OAAA3N,GAAA6D,SAAA8B,OAAA,MACAvB,IAEA,KAAAkK,EAAA,MAAA2M,EACA,IAAAH,MACAI,EAAA,SAAA7S,EAAAlU,GACA,GAAAkU,GAAAA,EAAAtF,OAAA,CACA,IAAA,GAAAoY,GAAA9S,EAAAtF,OAAA,EAAAoY,GAAA,EAAAA,IAAA,CAGA,GAFA/W,EAAAP,EAAAZ,aAAAW,UAAAyE,EAAA8S,GACAnS,EAAAnF,EAAAZ,aAAAgW,YAAAjZ,EAAAoE,GACAP,EAAAZ,aAAAG,WAAA,CACA,GAAAgY,GAAA,UAAArH,KAAAlQ,EAAAZ,aAAAG,YACA/F,EAAA,aAAA0W,KAAAlQ,EAAAZ,aAAAG,WACA,IAAAgY,GAAAA,EAAArY,OAAA,GAAAqY,EAAA,IAAAvX,EAAAZ,aAAAW,UACAvG,GAAAA,EAAA0F,OAAA,GAAAiG,EAAA3L,EAAA,KAAAlJ,EAAAkJ,EAAA,IAEA,MADAyd,GAAAD,QAAAxS,EAAA8S,KACA,EAIA,GAAA/mB,QAAAwU,OAAAI,EAAA7U,GAEA,MADA2mB,GAAAD,QAAAxS,EAAA8S,KACA,EAGA,OAAA,GAEA,KAAAF,EAAA,MAAAH,EACA,KAAA,GAAA7e,GAAAgf,EAAAlY,OAAA,EAAA9G,GAAA,EAAAA,IAEAif,EAAArX,EAAA8E,SAAAsS,EAAAhf,KAEAif,EAAA5M,EAAA2M,EAAAhf,KAEA6e,EAAAD,QAAAI,EAAAhf,GAIA,OAAA6e,KAIA9a,EAAAsQ,iBAAA,WAAA,MAAAC,GAAAC,aAAA,SAAA9K,EAAA2V,GACAA,GAAA3V,IAEAtR,QAAAyQ,UAAA0L,EAAAC,eACAD,EAAAC,YAAA,MAEA+I,EAAAZ,sBAIApI,EAAA+K,QAAA,WAEA,IAAAlnB,QAAAiZ,QAAAkD,EAAAgL,YAAA,CAEA,IAAArnB,EAAAqc,EAAAgL,YAGA,KAAA3Z,GAAA,WAAA,iDAAA2O,EAAAgL,WAFAhL,GAAAgL,cAKA1X,EAAA8E,SAAA4H,EAAAgL,WACAhC,EAAAZ,mBACA3Y,EAAAuG,cAGAvG,EAAAyT,IAAA,aAAA,SAAA+H,EAAArX,GACA,KAAAN,EAAA8E,SAAA5F,QAAAc,EAAAkS,OAAA,CAGAlS,EAAA8E,SAAAO,KAAA/E,EACA,IAAAC,KACAA,GAAAP,EAAAZ,aAAAW,UAAAO,EAEA0D,EAAA,WACAhE,EAAA4R,iBAAAzV,GACA+Y,MAAA5U,EACA6U,OAAAnV,EAAAZ,aAAAgW,YAAAjZ,EAAAoE,OAGAmV,EAAAhB,iBAGAvY,EAAAyT,IAAA,eAAA,WACA8F,EAAAjB,sBAGAtY,EAAAwG,OAAA,mBAAA,SAAAd,EAAA2V,GAEAA,IAAA3V,GAAA7B,EAAAmO,oBAGAnO,EAAAkI,YAAAO,GAAA,UAAA,SAAAtQ,GACA,GAAAqO,GAAArO,EAAAE,KACA8D,GAAA4S,OAAA,WACA,GAAAtI,IAAA,CAEAhW,GAAAmI,qBAAA4N,KACAC,EAAA+O,EAAAhP,IAEAC,GAAAD,GAAA/V,EAAAC,MAGAyH,EAAA6V,iBACA7V,EAAA2V,uBA0EA9N,EAAAkI,YAAAO,GAAA,QAAA,SAAAtQ,GAQA,GANA1H,EAAAiI,mBAAAP,EAAAE,QACA8D,EAAAuG,WAAA,WACA1C,EAAAoC,YAAApC,EAAAwI,gBAAA,KAAA,IAIAxI,EAAAqC,QAAAC,aAAAtC,EAAA8B,OAAA5C,OAAA,EAAA,CAGA,GAAA/G,EAAAE,QAAA5H,EAAAC,KAAAD,EAAAyH,UAAAC,IAAA1H,EAAAgI,cAAAN,IAAAA,EAAAE,QAAA5H,EAAAG,KAAAH,EAAAiI,mBAAAP,EAAAE,OACA,MAKA,IAFA2H,EAAAoC,YAAApC,EAAAwI,gBAAA,KAAA,EAEAxI,EAAAwI,gBAAA,EAAA,MAEA,IAEA2G,GACA7O,EAGAsX,EACAC,EAPArV,EAAAjS,QAAAomB,KAAA3W,EAAAwC,OACAsV,EAAAvnB,QAAAomB,KAAA3W,EAAAwC,OAGAuV,GAAA,EACAtB,IAKA,IAAA1d,SAAAiH,EAAAqC,QAAAsF,IAAA,CAaA,GAZAiQ,EAAA5X,EAAAiE,QAAA,UAAAzB,GAAA4K,OAAA,IACAwK,EAAA1Y,OAAA,IACA2Y,EAAAD,EAAA,IAGApV,EAAAtD,OAAA,GAAA2Y,IACAE,GAAA,EACAvV,EAAAA,EAAAsI,MAAA,EAAAtI,EAAAtD,QACA4Y,EAAAA,EAAAhN,MAAA,EAAAgN,EAAA5Y,SAEAiQ,EAAAnP,EAAAqC,QAAAsF,IAAA3H,EAAA8B,QAGAgW,EAAAE,KAAA,SAAA5B,GACA,MAAA7lB,SAAAwU,OAAAqR,EAAAjH,MAEAnP,EAAA8E,SAAAkT,KAAA,SAAA5B,GACA,MAAA7lB,SAAAwU,OAAAqR,EAAAjH,KAOA,WAJAhT,GAAAuG,WAAA,WACA1C,EAAAoC,YAAA,EACApC,EAAAwC,MAAAA,GAIA2M,KAAAA,EAAA/B,OAAA,OAEA,CAgBA,GAdAwK,EAAA5X,EAAAiE,QAAA,UAAAzB,EAAA,SAAAlC,GACA,MAAAA,GAAA2P,MAAAjQ,EAAAwI,gBAEAoP,EAAA1Y,OAAA,IACA2Y,EAAAD,EAAA,IAEAtX,EAAAkC,EAAA,GAEAzJ,SAAAuH,GAAAkC,EAAAtD,OAAA,GAAA2Y,IACAE,GAAA,EACAvV,EAAAA,EAAAsI,MAAA,EAAAtI,EAAAtD,QACA4Y,EAAAA,EAAAhN,MAAA,EAAAgN,EAAA5Y,SAEAiQ,EAAAnP,EAAA8B,OAAA,IAAA9B,EAAAwI,aACA8N,EAAAtW,EAAA8E,SAAA9E,EAAA8B,WACA,MAIA,IAAAmU,EAAA6B,EAAArO,OAAAzJ,EAAA8E,WAUA,YAPAiT,IACAvV,EAAAsV,EACA3b,EAAAuG,WAAA,WACA1C,EAAAoC,YAAA,EACApC,EAAAwC,MAAAA,KAKA,IAAAyT,EAAA6B,GAKA,YAHAC,IACA/X,EAAAwC,MAAAsV,EAAAhN,MAAA,EAAAgN,EAAA5Y,UAKA6Y,IAAAtB,EAAAH,EAAAtW,EAAA8E,SAAAqK,IAEAsH,KACAjU,EAAAA,EAAAsI,MAAA2L,EAAA,EAAAjU,EAAAtD,OAAA,IAEAsD,KACA2M,GAAA3M,EAAA6C,KAAA8J,GACA3M,EAAAA,EAAAiH,OAAAqO,IAEA3b,EAAAuG,WAAA,WAIA,GAHA1C,EAAAoC,YAAA,EACApC,EAAAwC,MAAAA,EAEAxC,EAAAqH,UAAA,CAEA,GAAA4Q,GAAA9I,EAAA3M,EAAAsI,MAAA,GAAAtI,CACAxC,GAAA2J,WAAAsO,GACA9I,IAEAnP,EAAAwC,MAAAwU,QAAA7H,GACAnP,EAAAf,OAAA+X,SAAA5R,KAAA,GAAA5C,OAAA2M,GAAA9M,SAAA,WA6CArC,EAAAkI,YAAAO,GAAA,OAAA,WACAzE,EAAA,WACA0R,EAAAjB,6BAQA1a,EAAAkC,UAAA,oBACA,iBAAA,SAAA4B,GACA,OACAM,SAAA,KACAC,QAAA,YACAtC,SAAA,EACAQ,YAAA,EACA+B,YAAA,SAAAC,GAEAA,EAAAC,SAAA,sBAGA,IAAArE,GAAAoE,EAAAE,SAAAC,KAAA,UAAAZ,EAAA3D,KACA,OAAAA,GAAA,2BAKAH,EAAAkC,UAAA,kBAAA,WAAA,WAAA,SAAA+H,EAAAhG,GACA,OACAG,SAAA,KACAC,SAAA,YAAA,YACAlC,KAAA,SAAAC,EAAAnD,EAAAoD,EAAAmU,GAEA,GAAAvQ,GAAAuQ,EAAA,GACA7D,EAAA6D,EAAA,EAGA7D,GAAAqK,SAAAC,QAAA,SAAAI,GAEA,GAAA/mB,EAAA+mB,GACA,MAAAA,EAGA,IACAjS,GADA5E,IAIA,OAFAA,GAAAP,EAAAZ,aAAAW,UAAAqX,EACAjS,EAAAnF,EAAAZ,aAAAgW,YAAAjZ,EAAAoE,KAKAmM,EAAAyK,YAAAH,QAAA,SAAAI,GAEA,GAAA/mB,EAAA+mB,GACA,MAAAA,EAGA,IAEAjS,GAFAsF,EAAAzK,EAAAZ,cAAAY,EAAAZ,aAAA0K,OAAA3N,GAAA6D,SAAA8B,OAAA,MACAvB,IAEA,IAAAkK,EAAA,CACA,GAAAyN,GAAA,SAAAC,GAGA,MAFA5X,GAAAP,EAAAZ,aAAAW,UAAAoY,EACAhT,EAAAnF,EAAAZ,aAAAgW,YAAAjZ,EAAAoE,GACA4E,IAAAiS,EAGA,IAAApX,EAAA8E,UAAAoT,EAAAlY,EAAA8E,UACA,MAAA9E,GAAA8E,QAEA,KAAA,GAAAJ,GAAA+F,EAAAvL,OAAA,EAAAwF,GAAA,EAAAA,IACA,GAAAwT,EAAAzN,EAAA/F,IAAA,MAAA+F,GAAA/F,GAGA,MAAA0S,KAIAjb,EAAAwG,OAAA,mBAAA,SAAAd,GACA6K,EAAAgL,aAAA7V,GACA6K,EAAAiI,cAAA9S,KAIA6K,EAAA+K,QAAA,WACAzX,EAAA8E,SAAA4H,EAAAgL,YAGAvb,EAAAyT,IAAA,aAAA,SAAA+H,EAAArX,GACAN,EAAA8E,SAAAxE,CACA,IAAAC,KACAA,GAAAP,EAAAZ,aAAAW,UAAAO,EAEA0D,EAAA,WACAhE,EAAA4R,iBAAAzV,GACA+Y,MAAA5U,EACA6U,OAAA9kB,EAAAiQ,GAAAA,EAAAN,EAAAZ,aAAAgW,YAAAjZ,EAAAoE,SAKApE,EAAAyT,IAAA,YAAA,SAAA+H,EAAAnd,GACAwJ,EAAA,WACAhE,EAAA0H,SAAAtK,KAAA,YAAA,GACA5C,GAAAwF,EAAA0H,SAAA,GAAAF,SACA,GAAA,KAGArL,EAAAyT,IAAA,eAAA,WACAlI,EAAAtK,KAAA,YAAA,IAIA,IAAAsK,GAAAnX,QAAAyI,QAAA,gNACAgF,GAAA0J,GAAAvL,GACA6D,EAAA0H,SAAAA,EAGA1H,EAAA4N,WAAAlG,EAEA1O,EAAAwF,SAAAhC,OAAAkL,GACAA,EAAA9N,KAAA,QAAA,WACAuC,EAAAuG,WAAA,WACA1C,EAAAwH,OAAA,MAGAE,EAAA9N,KAAA,OAAA,WACAuC,EAAAuG,WAAA,WACA1C,EAAAwH,OAAA,MAGAE,EAAA9N,KAAA,UAAA,SAAAzB,GAEA,MAAAA,GAAAE,QAAA5H,EAAAgB,WAAAuO,EAAA/E,kBAAA,GACA9C,EAAA6V,iBACA7V,EAAA2V,kBACA9N,EAAA4G,OAAA7N,YACAoD,GAAA4S,eAIA5W,EAAAE,QAAA5H,EAAAC,KAAAD,EAAAyH,UAAAC,IAAA1H,EAAAgI,cAAAN,IAAAA,EAAAE,QAAA5H,EAAAG,MAIAuH,EAAAE,OAAA5H,EAAAQ,MAAAkH,EAAAE,OAAA5H,EAAAM,IAAAoH,EAAAE,OAAA5H,EAAAE,OAAAwH,EAAAE,OAAA5H,EAAAI,QACAsH,EAAA6V,iBACA7V,EAAA2V,kBACA9N,EAAAmC,YAGAhG,EAAA6U,cAGAtJ,EAAA9N,KAAA,cAAA,SAAAzB,GAEAA,EAAAE,QAAA5H,EAAAC,KAAAD,EAAAyH,UAAAC,IAAA1H,EAAAgI,cAAAN,IAAAA,EAAAE,QAAA5H,EAAAG,KAAAuH,EAAAE,OAAA5H,EAAAE,OAAAwH,EAAAE,QAAA5H,EAAAgB,YAIAuO,EAAAmC,SAAAuF,EAAA0Q,OACA1Q,EAAA0Q,IAAA,IACAjc,EAAA6U,kBAUAjX,EAAAkC,UAAA,gBAAA,WAAA,iBAAA,iBAAA,SAAA+H,EAAAnG,EAAAE,GACA,OACAK,SAAA,aAAA,YACAlC,KAAA,SAAAC,EAAAnD,EAAAoD,EAAAmU,GACA,GAAA,OAAApU,EAAAC,EAAAic,cACA,KAAAta,GAAA,OAAA,0BAGA,IAAAiC,GAAAuQ,EAAA,GACA+H,EAAA/H,EAAA,GAEAgI,EAAAhoB,QAAAioB,QACAC,KAAA,cAEAtc,EAAA8E,MAAA7E,EAAAsc,sBAEAD,EAAAF,EAAAE,KACAE,EAAA,WACAC,EAAA,WACAC,EAAA,kBACAC,EAAA,gBAYA,IAVA3c,EAAAwG,OAAA,WACA,MAAA3C,GAAA5F,UACA,SAAAyH,GACAA,EACA7I,EAAAyF,KAAA,aAAA,GAEAzF,EAAA6K,WAAA,gBAIA7K,EAAAyR,KAAA,gBAAA,CAIAzR,EAAAyP,GAAA,YAAA,SAAAkP,GACA3e,EAAAuF,SAAAoa,IAEAhB,EAAAoB,cAAApB,EAAApI,cAAAwJ,cAAAC,QAAA,OAAA7c,EAAA8c,OAAAC,cAGAlgB,EAAAyP,GAAA,UAAA,WACA2K,EAAAuF,IAGA,IA0BAQ,GA1BAC,EAAA,SAAAC,EAAAC,GAEAlgB,KAAAsM,OAAA4T,EAAA,EAAAlgB,KAAAsM,OAAA2T,EAAA,GAAA,KAGAjG,EAAA,SAAAmG,GACAhpB,QAAA8Y,QAAArJ,EAAAG,SAAAjH,iBAAA,IAAAqgB,GAAA,SAAAjE,GACA/kB,QAAAyI,QAAAsc,GAAAlC,YAAAmG,MAIAC,EAAA,SAAA7B,GACAA,EAAA3J,gBAEA,IAAAkD,GAAA,aAAAuH,EAAAd,EAAA8B,SAAA9B,EAAA+B,SAAA/B,EAAApI,cAAAoI,EAAApI,cAAAkK,QAAA,GAAA9B,EAAAgC,SAAAhC,EAAAiC,SAAAjC,EAAApI,cAAAoI,EAAApI,cAAAoK,QAAA,EAEAzI,GAAA9X,KAAA,aAAAqf,EAAA,eAAA,eAAA,GACArF,EAAA0F,GACA9f,EAAAuF,SAAAsa,KAGAzF,EAAAyF,GACA7f,EAAAuF,SAAAua,KAMAe,EAAA,SAAAlC,GACAA,EAAA3J,gBAEA,IAAA8L,GAAAjZ,UAAA8W,EAAAoB,cAAApB,EAAApI,cAAAwJ,cAAAzJ,QAAA,QAAA,GAGAtL,GAAA8I,OAAAqM,GACAA,EAAAnV,EAAA,WACA+V,EAAAD,IACA,KAGAC,EAAA,SAAAD,GACA,GAAAE,GAAA7d,EAAA8E,MAAA7E,EAAAic,cACA4B,EAAAD,EAAAF,GACA9D,EAAA,IAIAA,GAFAhd,EAAA8a,SAAA+E,GACAiB,EAAA3d,EAAA8c,OACA9c,EAAA8c,OAAA,EAEA9c,EAAA8c,OAGAa,EAAA3d,EAAA8c,OACA9c,EAAA8c,OAEA9c,EAAA8c,OAAA,EAIAG,EAAAzd,MAAAqe,GAAAF,EAAA9D,IAEAsC,EAAA3D,cAAAC,KAAAC,OAEA1Y,EAAA4S,OAAA,WACA5S,EAAA+d,MAAA,uBACAC,MAAAH,EACA1Z,KAAA2Z,EACAZ,KAAAS,EACAR,GAAAtD,MAIA5C,EAAAwF,GACAxF,EAAAyF,GACAzF,EAAA0F,GAEA9f,EAAA6P,IAAA,OAAAgR,GAGA7gB,GAAAyP,GAAA,YAAA,WACAzP,EAAA8a,SAAA6E,KAIA3f,EAAAuF,SAAAqa,GAEA5f,EAAAyP,GAAA,WAAA+Q,GACAxgB,EAAAyP,GAAA,OAAAoR,MAGA7gB,EAAAyP,GAAA,YAAA,SAAAkP,GACAA,EAAA/G,QAAA5X,IAIAoa,EAAAwF,GACAxF,EAAAyF,GACAzF,EAAA0F,GAEA9f,EAAA6P,IAAA,WAAA2Q,GACAxgB,EAAA6P,IAAA,OAAAgR,YAaA9f,EAAA+C,QAAA,iBAAA,WAAA,SAAAkH,GACA,MAAA,UAAAoW,EAAAC,GACA,GAAAC,EAEA,OAAA,YACA,GAAAC,GAAAnhB,KACAohB,EAAAC,MAAAxhB,UAAA6R,MAAAnG,KAAA/I,UACA0e,IACAtW,EAAA8I,OAAAwN,GAGAA,EAAAtW,EAAA,WACAoW,EAAAze,MAAA4e,EAAAC,IACAH,QAKAtgB,EAAAkC,UAAA,gBAAA,SAAA,WAAA,SAAAgC,EAAA+F,GACA,OACA7F,SAAA,IACAC,QAAA,WACAlC,KAAA,SAAAC,EAAAnD,EAAAoD,EAAA4D,GACAA,EAAA0a,oBAAAzc,EAAA7B,EAAAue,cAEAxe,EAAAwG,OAAA,eAAA,SAAAmQ,EAAA8H,GACA9H,IAAA8H,GACA5W,EAAA,WACAhE,EAAA0a,oBAAAve,GACA2W,OAAAA,aAmBA/Y,EAAAwB,QAAA,mBAAA,iBAAA,SAAA,SAAAwC,EAAAE,GACA,GAAAsc,GAAAnhB,IASAmhB,GAAAlb,MAAA,SAAAwb,GAGA,GAAA5K,EAeA,IATAA,EAAA4K,EAAA5K,MAAA,gKASAA,EACA,KAAAlS,GAAA,OAAA,yFACA8c,EAGA,IAAA/Q,GAAAmG,EAAA,GACA3F,EAAA,EAKA,IAAA2F,EAAA,GAAA,CAEAnG,EAAAmG,EAAA,GAAAnU,QAAA,eAAA,GAEA,IAAAgf,GAAA7K,EAAA,GAAAA,MAAA,+CACA6K,IAAAA,EAAA,GAAArN,SACAnD,EAAAwQ,EAAA,GACAhR,EAAAA,EAAAhO,QAAAwO,EAAA,KAIA,OACAvK,SAAAkQ,EAAA,IAAAA,EAAA,GACA5F,QAAA4F,EAAA,GACAnG,OAAA7L,EAAA6L,GACAQ,QAAAA,EACA/K,WAAA0Q,EAAA,GACAmF,YAAAnX,EAAAgS,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAvQ,iBAAA,SAAAqb,GACA,GAAAF,GAAAzhB,KAAA2G,SAAA,QAAAgb,EAAA,eAAA,gBAIA,OAHA3hB,MAAAmG,aACAsb,GAAA,aAAAzhB,KAAAmG,YAEAsb,KAMAN,EAAApb,2BAAA,WACA,MAAA,uDDgBA5O,QAAQyJ,OAAO,aAAaghB,KAAK,iBAAkB,SAASC,GEjtF5DA,EAAAC,IAAA,6BAAA,o/BACAD,EAAAC,IAAA,4BAAA,uDACAD,EAAAC,IAAA,4BAAA,uDACAD,EAAAC,IAAA,oCAAA,+mBACAD,EAAAC,IAAA,2BAAA,kgCACAD,EAAAC,IAAA,+BAAA,sHACAD,EAAAC,IAAA,qCAAA,u/BACAD,EAAAC,IAAA,4BAAA,q4BACAD,EAAAC,IAAA,2BAAA,ouCACAD,EAAAC,IAAA,0BAAA,uDACAD,EAAAC,IAAA,0BAAA,uDACAD,EAAAC,IAAA,kCAAA,yrBACAD,EAAAC,IAAA,yBAAA,8sBACAD,EAAAC,IAAA,6BAAA,4KACAD,EAAAC,IAAA,mCAAA,ouCACAD,EAAAC,IAAA,0BAAA,yqCACAD,EAAAC,IAAA,6BAAA,o4BACAD,EAAAC,IAAA,4BAAA,uDACAD,EAAAC,IAAA,4BAAA,uDACAD,EAAAC,IAAA,oCAAA,whBACAD,EAAAC,IAAA,2BAAA,8UACAD,EAAAC,IAAA,+BAAA,iMACAD,EAAAC,IAAA,qCAAA,qiCACAD,EAAAC,IAAA,4BAAA","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.20.0 - 2025-09-29T07:39:31.046Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\nfunction isNil(value) {\n  return angular.isUndefined(value) || value === null;\n}\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  searchDebounce: 0,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon glyphicon-refresh ui-select-spin',\n  backspaceReset: true,\n  preserveArrayReference: false, // Opt-in to preserve array reference on model updates\n  // Performance: search-time caps (opt-in)\n  visibleLimitWhenSearching: undefined,\n  visibleLimitWhenSearchingStep: 100,\n  groupVisibleLimitWhenSearching: undefined,\n  groupVisibleLimitWhenSearchingStep: 50\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window', '$parse', '$$uisDebounce',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window, $parse, $$uisDebounce) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      // If no explicit track by in repeat, allow attribute-level fallback\n      var parentTrackBy = tElement.parent().attr('track-by');\n      if (!parserResult.trackByExp && (tAttrs.trackBy || parentTrackBy)) {\n        parserResult.trackByExp = tAttrs.trackBy || parentTrackBy;\n      }\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n\n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event.\n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n\n      return function link(scope, element, attrs, $select) {\n\n\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        // Apply track-by fallback when repeat lacks it\n        if (!$select.parserResult.trackByExp) {\n          var tbAttr = attrs.trackBy || $select.$element.attr('track-by');\n          if (tbAttr) {\n            $select.parserResult.trackByExp = tbAttr;\n          }\n        }\n        // Expose a key function for downstream performance features\n        if ($select.parserResult.trackByExp) {\n          var keyGetter = $parse($select.parserResult.trackByExp);\n          $select.getItemKey = function(item) {\n            var locals = {};\n            locals[$select.parserResult.itemName] = item;\n            return keyGetter(scope, locals);\n          };\n        } else {\n          $select.getItemKey = function(item) { return item; };\n        }\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.minimumInputLength = parseInt(attrs.minimumInputLength) || 0;\n        var parentSearchDebounce = $select.$element && $select.$element.attr('search-debounce');\n        var sdValue = angular.isDefined(attrs.searchDebounce) ? attrs.searchDebounce : parentSearchDebounce;\n        $select.searchDebounce = angular.isDefined(sdValue) ? parseInt(scope.$eval(sdValue)) : uiSelectConfig.searchDebounce;\n\n        var parentVisibleLimit = $select.$element && $select.$element.attr('visible-limit');\n        var vlValue = angular.isDefined(attrs.visibleLimit) ? attrs.visibleLimit : parentVisibleLimit;\n        $select.visibleLimit = angular.isDefined(vlValue) ? parseInt(scope.$eval(vlValue)) : undefined;\n        if (!isNaN($select.visibleLimit) && $select.visibleLimit > 0) {\n          if ($select.refreshItems) { $select.refreshItems(); }\n        }\n\n        // New: limit total visible items while searching (works for grouped and ungrouped)\n        var parentVisibleLimitWhenSearching = $select.$element && $select.$element.attr('visible-limit-when-searching');\n        var vlwsValue = angular.isDefined(attrs.visibleLimitWhenSearching) ? attrs.visibleLimitWhenSearching : parentVisibleLimitWhenSearching;\n        $select.visibleLimitWhenSearching = angular.isDefined(vlwsValue) ? parseInt(scope.$eval(vlwsValue)) : uiSelectConfig.visibleLimitWhenSearching;\n        if (!isNaN($select.visibleLimitWhenSearching) && $select.visibleLimitWhenSearching > 0) {\n          if ($select.refreshItems) { $select.refreshItems(); }\n        }\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n\n        var lastSearch;\n        var onSearchChanged = function() {\n          var newValue = $select.search;\n          // Reset current caps when search text changes\n          if (newValue !== lastSearch) {\n            $select._currentVisibleLimitWhenSearching = $select.visibleLimitWhenSearching;\n            $select._groupCurrentVisibleLimit = {};\n            lastSearch = newValue;\n          }\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        };\n\n        if ($select.searchDebounce && $select.searchDebounce > 0) {\n          var debounced = $$uisDebounce(function() {\n            scope.$evalAsync(onSearchChanged);\n          }, $select.searchDebounce);\n          scope.$watch('$select.search', function() { debounced(); });\n        } else {\n          scope.$watch('$select.search', function() { onSearchChanged(); });\n        }\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        // Optional: step for show-more while searching (global)\n        var parentVlwsStep = $select.$element && $select.$element.attr('visible-limit-when-searching-step');\n        var vlwsStepValue = angular.isDefined(attrs.visibleLimitWhenSearchingStep) ? attrs.visibleLimitWhenSearchingStep : parentVlwsStep;\n        var stepDefault = uiSelectConfig.visibleLimitWhenSearchingStep;\n        $select.visibleLimitWhenSearchingStep = angular.isDefined(vlwsStepValue) ? parseInt(scope.$eval(vlwsStepValue)) : stepDefault;\n\n        // Expose a helper to increase current global cap when searching\n        $select.showMore = function(step) {\n          var inc = angular.isNumber(step) ? step : $select.visibleLimitWhenSearchingStep;\n          var base = angular.isNumber($select._currentVisibleLimitWhenSearching) ? $select._currentVisibleLimitWhenSearching : ($select.visibleLimitWhenSearching || 0);\n          $select._currentVisibleLimitWhenSearching = base + inc;\n          if ($select.refreshItems) { $select.refreshItems(); }\n        };\n\n        // Per-group variant: parse limits and step\n        var parentGroupVl = $select.$element && $select.$element.attr('group-visible-limit-when-searching');\n        var groupVlValue = angular.isDefined(attrs.groupVisibleLimitWhenSearching) ? attrs.groupVisibleLimitWhenSearching : parentGroupVl;\n        $select.groupVisibleLimitWhenSearching = angular.isDefined(groupVlValue) ? parseInt(scope.$eval(groupVlValue)) : uiSelectConfig.groupVisibleLimitWhenSearching;\n\n        var parentGroupStep = $select.$element && $select.$element.attr('group-visible-limit-when-searching-step');\n        var groupStepValue = angular.isDefined(attrs.groupVisibleLimitWhenSearchingStep) ? attrs.groupVisibleLimitWhenSearchingStep : parentGroupStep;\n        var groupStepDefault = uiSelectConfig.groupVisibleLimitWhenSearchingStep;\n        $select.groupVisibleLimitWhenSearchingStep = angular.isDefined(groupStepValue) ? parseInt(scope.$eval(groupStepValue)) : groupStepDefault;\n\n        // Map of per-group current limits (by group name)\n        $select._groupCurrentVisibleLimit = {};\n\n        // Expose per-group show more\n        $select.showMoreGroup = function(groupName, step) {\n          if (!groupName) return;\n          var inc = angular.isNumber(step) ? step : $select.groupVisibleLimitWhenSearchingStep;\n          var curr = $select._groupCurrentVisibleLimit[groupName];\n          if (!angular.isNumber(curr)) {\n            curr = angular.isNumber($select.groupVisibleLimitWhenSearching) ? $select.groupVisibleLimitWhenSearching : 0;\n          }\n          $select._groupCurrentVisibleLimit[groupName] = curr + inc;\n          if ($select.refreshItems) { $select.refreshItems(); }\n        };\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            tElement.attr('role', 'listbox');\n            $select.refresh(attrs.refresh);\n          } else {\n            element.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.refreshing = false;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  // Internal caches for performance\n  ctrl._disabledKeySet = null; // map-like object for O(1) disabled lookups when track-by is available\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return isNil(ctrl.selected) || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  ctrl.getPlaceholder = function(){\n    if(ctrl.selected && ctrl.selected.length) return;\n    return ctrl.placeholder;\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (!ctrl.multiple) {\n        if (ctrl.selected && ctrl.items.length) {\n          ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n            return angular.equals(this, item);\n          }, ctrl.selected);\n        } else {\n          ctrl.activeIndex = 0;\n        }\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1 && ctrl.open) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name, noStrict) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      if (noStrict)\n        return group.name == name;\n      else\n        return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items || [];\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      // Legacy: cap for ungrouped lists (existing behavior)\n      if (!ctrl.isGrouped && angular.isNumber(ctrl.visibleLimit) && ctrl.visibleLimit > 0 && angular.isArray(ctrl.items)) {\n        ctrl.items = ctrl.items.slice(0, ctrl.visibleLimit);\n      }\n\n      // Capture count before applying search-time cap\n      var preCapCount = angular.isArray(ctrl.items) ? ctrl.items.length : 0;\n      if (ctrl.isGrouped && angular.isArray(ctrl.groups)) {\n        preCapCount = 0;\n        for (var pci = 0; pci < ctrl.groups.length; pci++) {\n          preCapCount += (ctrl.groups[pci].items && ctrl.groups[pci].items.length) ? ctrl.groups[pci].items.length : 0;\n        }\n      }\n\n      // New: cap visible items while searching (two modes: per-group or global)\n      if (ctrl.search && ctrl.search.length > 0) {\n        var appliedCap = false;\n        if (ctrl.isGrouped && angular.isArray(ctrl.groups) && angular.isNumber(ctrl.groupVisibleLimitWhenSearching) && ctrl.groupVisibleLimitWhenSearching > 0) {\n          // Per-group cap\n          var newGroups = [];\n          for (var ggi = 0; ggi < ctrl.groups.length; ggi++) {\n            var gg = ctrl.groups[ggi];\n            var glimit = ctrl._groupCurrentVisibleLimit && angular.isNumber(ctrl._groupCurrentVisibleLimit[gg.name]) ?\n              ctrl._groupCurrentVisibleLimit[gg.name] : ctrl.groupVisibleLimitWhenSearching;\n            var gcount = (gg.items && gg.items.length) ? gg.items.length : 0;\n            var gtake = Math.max(Math.min(glimit, gcount), 0);\n            var gtruncated = gcount > gtake;\n            var gremaining = gtruncated ? (gcount - gtake) : 0;\n            newGroups.push({ name: gg.name, items: gg.items.slice(0, gtake), _truncated: gtruncated, _remaining: gremaining });\n          }\n          ctrl.groups = newGroups;\n          // Rebuild items\n          ctrl.items = [];\n          ctrl.groups.forEach(function(group) { ctrl.items = ctrl.items.concat(group.items); });\n          appliedCap = true;\n        }\n\n        if (!appliedCap) {\n          // Global cap\n          var effectiveLimit = (angular.isNumber(ctrl._currentVisibleLimitWhenSearching) && ctrl._currentVisibleLimitWhenSearching > 0) ?\n            ctrl._currentVisibleLimitWhenSearching : ctrl.visibleLimitWhenSearching;\n          if (angular.isNumber(effectiveLimit) && effectiveLimit > 0) {\n            var remaining = effectiveLimit;\n            if (ctrl.isGrouped && angular.isArray(ctrl.groups)) {\n              var limitedGroups = [];\n              for (var gi = 0; gi < ctrl.groups.length && remaining > 0; gi++) {\n                var g = ctrl.groups[gi];\n                var take = Math.min(remaining, (g.items && g.items.length) ? g.items.length : 0);\n                if (take > 0) {\n                  limitedGroups.push({ name: g.name, items: g.items.slice(0, take) });\n                  remaining -= take;\n                }\n              }\n              ctrl.groups = limitedGroups;\n              // Rebuild items from limited groups\n              ctrl.items = [];\n              ctrl.groups.forEach(function(group) { ctrl.items = ctrl.items.concat(group.items); });\n            } else if (!ctrl.isGrouped && angular.isArray(ctrl.items)) {\n              ctrl.items = ctrl.items.slice(0, remaining);\n            }\n          }\n        }\n      }\n      // Compute remaining and whether truncated for show-more UI\n      var postCapCount = angular.isArray(ctrl.items) ? ctrl.items.length : 0;\n      ctrl.remainingCountWhenSearching = (ctrl.search && ctrl.search.length > 0) ? Math.max(preCapCount - postCapCount, 0) : 0;\n      ctrl.truncatedWhileSearching = ctrl.remainingCountWhenSearching > 0;\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n  $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        if ($scope.$select.search.length >= $scope.$select.minimumInputLength) {\n          var refreshPromise = $scope.$eval(refreshAttr);\n          if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n            ctrl.refreshing = true;\n            refreshPromise.finally(function() {\n              ctrl.refreshing = false;\n            });\n          }\n        }\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    if (ctrl._disabledKeySet && ctrl.getItemKey && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n      var k = ctrl.getItemKey(item);\n      return !!ctrl._disabledKeySet[k];\n    }\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        if (ctrl._disabledKeySet && ctrl.getItemKey && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n          var key = ctrl.getItemKey(item);\n          isDisabled = !!ctrl._disabledKeySet[key];\n        } else {\n          isDisabled = _isItemSelected(item);\n        }\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n  // Rebuild disabled key cache when selection changes (only useful when track-by is available)\n  $scope.$watchCollection(function () { return ctrl.selected; }, function () {\n    if (ctrl.getItemKey && ctrl.multiple && ctrl.parserResult && ctrl.parserResult.trackByExp) {\n      var set = Object.create(null);\n      if (angular.isArray(ctrl.selected)) {\n        for (var i = 0; i < ctrl.selected.length; i++) {\n          var k = ctrl.getItemKey(ctrl.selected[i]);\n          set[k] = true;\n        }\n      }\n      ctrl._disabledKeySet = set;\n    } else {\n      ctrl._disabledKeySet = null;\n    }\n  });\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (isNil(item) || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && ($event.type === 'click' || $event.type === 'touchend') && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(null);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n    } else {\n      ctrl.activate();\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 1);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.$element[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) {\n          var idx = ++ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idx]) && idx < ctrl.items.length) {\n            ctrl.activeIndex = ++idx;\n          }\n        }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0) {\n          var idxmin = --ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idxmin]) && idxmin > 0) {\n            ctrl.activeIndex = --idxmin;\n          }\n        }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n\n  $scope.$watch('$select.activeIndex', function(activeIndex) {\n    if (activeIndex)\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n  });\n\n  $scope.$watch('$select.open', function(open) {\n    if (!open)\n      $element.find('input').removeAttr('aria-activedescendant');\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('backspaceReset', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var backspaceReset = scope.$eval(attrs.backspaceReset);\n          $select.backspaceReset = backspaceReset !== undefined ? backspaceReset : true;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here. Similar approach to http://stackoverflow.com/questions/12931369\n        // but using the capture phase instead of bubble phase of the event propagation.\n        //\n        // Using the capture phase avoids problems that araise when event.stopPropatagion()\n        // is called before the event reaches the `document`.\n        $window.document.addEventListener('click', onDocumentClick, true);\n\n        scope.$on('$destroy', function() {\n          $window.document.removeEventListener('click', onDocumentClick, true);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeaderGroupSelectable', ['$timeout', function($timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect'],\n    scope: {\n      isEnabled: \"<?uiSelectHeaderGroupSelectable\"\n    },\n    link: function ($scope, $element, attrs, select) {\n      // TODO Why that???\n      var $select = select[0];\n      if (angular.isUndefined($scope.isEnabled)) {\n        $scope.isEnabled = true;\n      }\n\n      function isEnabled() {\n        return angular.isUndefined($scope.isEnabled) || $scope.isEnabled;\n      }\n\n      function getElements() {\n        if ($select.multiple && $select.groups) {\n          return $element.querySelectorAll('.ui-select-choices-group-label');\n        } else {\n          console.error('Use uiSelectHeaderGroupSelectable with no multiple uiSelect or without groupBy');\n          return [];\n        }\n      }\n\n      function enableClick() {\n        if (isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n\n            // Check the onClick event is not already listen\n            if (!element.hasClass('ui-select-header-group-selectable')) {\n              element.addClass('ui-select-header-group-selectable');\n\n              element.on('click', function () {\n                if (isEnabled()) {\n                  var group = $select.findGroupByName(element.text(), true);\n\n                  angular.forEach(group.items, function(item) {\n                    $timeout(function() {\n                      $select.select(item, false, ' ');\n                    });\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n\n      function disableClick() {\n        if (!isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n            element.removeClass('ui-select-header-group-selectable');\n            element.off('click');\n          });\n        }\n      }\n\n      // Watch element to trigger select event\n      $scope.$watch('isEnabled', function() {\n        if (!isEnabled()) {\n          disableClick();\n        } else {\n          enableClick();\n        }\n      });\n\n      $scope.$watch('$select.groups', enableClick);\n      $scope.$watch(function() {\n        return $select.selected && $select.selected.length ? $select.selected.length : -1;\n      }, enableClick);\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout','uiSelectConfig', function(uiSelectMinErr, $timeout, uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        \n        // Check if we should preserve the array reference\n        if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue)) {\n          resultMultiple = ngModel.$modelValue; // Reuse existing array\n          resultMultiple.length = 0; // Clear it\n        }\n        \n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          \n          if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue)) {\n            resultMultiple.push(result); // Push instead of unshift for better performance\n          } else {\n            resultMultiple.unshift(result); // Original behavior\n          }\n        }\n        \n        // Reverse if we pushed (to maintain order)\n        if (uiSelectConfig.preserveArrayReference && angular.isArray(ngModel.$modelValue) && $select.selected.length > 0) {\n          resultMultiple.reverse();\n        }\n        \n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if (isNil(ngModel.$viewValue)){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function(){\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n\n              } else {\n                // If nothing yet selected, select last item\n                return last;\n              }\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function() {\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: isNil(item) ? item : $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE && $select.backspaceReset !== false) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      if (element.data('disallowDrop')) {\n        return;\n      }\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content\\\"> <li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"> <div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div> <div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\" role=\\\"option\\\"> <span class=\\\"ui-select-choices-row-inner\\\"></span> </div> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <button type=\\\"button\\\" class=\\\"btn btn-link btn-xs\\\" ng-click=\\\"$select.showMoreGroup($group.name)\\\">Show more ({{$group._remaining}})</button> </div> </li> </ul> \");\n$templateCache.put(\"bootstrap/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"bootstrap/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"> <span ng-repeat=\\\"$item in $select.selected track by $index\\\"> <span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"> <span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append></span> </span> </span> </span> \");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"> <span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"> <span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"> <i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i> </a> </span> </div> \");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"> <li ng-transclude> </li> </ul> \");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"> <div> <div class=\\\"ui-select-match\\\"></div> <span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </div> <div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"> <div class=\\\"ui-select-match\\\"></div> <span ng-show=\\\"$select.open && $select.refreshing  && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"> <div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"> <li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"> <div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div> <ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"> <li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $index === $select.activeIndex, \\'select2-disabled\\': (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\"> <div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div> </li> <li class=\\\"ui-select-group-more select2-more-results\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <a href=\\\"\\\" ng-click=\\\"$select.showMoreGroup($group.name); $event.preventDefault();\\\">Show more ({{$group._remaining}})</a> </li> </ul> </li> </ul> \");\n$templateCache.put(\"select2/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"select2/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<!--\\n  select2-choice needs to be before ui-select-multiple\\n  otherwise CSS rules from https://github.com/fk/select2-bootstrap-css\\n  do not work: [class^=\\\"select2-choice\\\"]\\n--> <span class=\\\"ui-select-match\\\"> <li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"> <span uis-transclude-append></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a> </li> </span> \");\n$templateCache.put(\"select2/match.tpl.html\",\"<!--\\n  select2-choice needs to be before ui-select-match\\n  otherwise CSS rules from https://github.com/fk/select2-bootstrap-css\\n  do not work: [class^=\\\"select2-choice\\\"]\\n--> <a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"> <span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span> </a> \");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"> <div class=\\\"dropdown-content\\\"> <div data-selectable=\\\"\\\" ng-transclude></div> </div> </div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open,\\n                \\'select2-container-disabled\\': $select.disabled}\\\"> <ul class=\\\"select2-choices\\\"> <span class=\\\"ui-select-match\\\"></span> <li class=\\\"select2-search-field\\\"> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </li> </ul> <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> </div> \");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open,\\n                \\'select2-container-disabled\\': $select.disabled,\\n                \\'select2-container-active\\': $select.focus,\\n                \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"> <div class=\\\"ui-select-match\\\"></div> <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"> <div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"> </div> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-no-choice\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> </div> \");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div class=\\\"ui-select-choices\\\"> <div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"> <div class=\\\"ui-select-choices-group optgroup\\\"> <div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div> <div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $index === $select.activeIndex, disabled: (($select._disabledKeySet && $select.multiple && !$select.removeSelected && $select.getItemKey && $select._disabledKeySet[$select.getItemKey(this[$select.itemProperty])]) || $select.isDisabled(this))}\\\"> <div class=\\\"option ui-select-choices-row-inner\\\" data-selectable></div> </div> <div class=\\\"ui-select-group-more\\\" ng-if=\\\"$select.search && $group._truncated\\\"> <a href=\\\"\\\" class=\\\"option\\\" ng-click=\\\"$select.showMoreGroup($group.name); $event.preventDefault();\\\">Show more ({{$group._remaining}})</a> </div> </div> </div> </div> \");\n$templateCache.put(\"selectize/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude></div> \");\n$templateCache.put(\"selectize/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude></div> \");\n$templateCache.put(\"selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\" ui-select-sort=\\\"$select.selected\\\"> <span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"> <span uis-transclude-append></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span> </span> </div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"> <span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude></span> </div> \");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"> <div class=\\\"selectize-dropdown-content\\\"> <div data-selectable=\\\"\\\" ng-transclude></div> </div> </div> \");\n$templateCache.put(\"selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"> <div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"> <div class=\\\"ui-select-match\\\"></div> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"> </div> <div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"> <div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"> <div class=\\\"ui-select-match\\\"></div> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"> </div> <div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"> <div class=\\\"ui-select-header\\\"></div> <div class=\\\"ui-select-choices\\\"></div> <div class=\\\"ui-select-footer\\\"></div> </div> <div class=\\\"ui-select-no-choice\\\"></div> </div> \");}]);",null,null]}